{"version":3,"file":"projects_demos_app_demo-modules_moment_module_ts-es2015.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAC6E;AACjD;;;;;;;;ICQ1B,6FAIC;IACD;IAAA,4DAA0B;;;IAHxB,qFAAqB;;;IAIvB,4FAIC;IACD;IAAA,4DAAyB;;;IAHvB,qFAAqB;;;IAIvB,2FAIC;IACD;IAAA,4DAAwB;;;IAHtB,qFAAqB;;ADpBzB,gHAAgH;AAChH,0DAAmB,CAAC,IAAI,EAAE;IACxB,IAAI,EAAE;QACJ,GAAG,EAAE,iEAAmB;QACxB,GAAG,EAAE,CAAC;KACP;CACF,CAAC,CAAC;AAOI,MAAM,aAAa;IAL1B;QAME,SAAI,GAAiB,gEAAkB,CAAC;QAExC,aAAQ,GAAS,IAAI,IAAI,EAAE,CAAC;QAE5B,WAAM,GAAoB,EAAE,CAAC;KAC9B;;0EANY,aAAa;2GAAb,aAAa;QCjB1B,yEAA8B;QAC5B,mSAGF;QAAA,4DAAM;QAEN;QAAA,oGAAwE;QAAxC,kMAAe;QAC/C;QAAA,4DAAiC;QAEjC;QAAA,yEAAuB;QACrB;QAAA,iJAK0B;QAC1B;QAAA,iJAKyB;QACzB;QAAA,+IAKwB;QAC1B;QAAA,4DAAM;QACN;;QAvBgC,0DAAe;QAAf,0EAAe;QAG1C,0DAAiB;QAAjB,8EAAiB;QAEjB,0DAAqB;QAArB,iFAAqB;QAMrB,0DAAoB;QAApB,gFAAoB;QAMpB,0DAAmB;QAAnB,+EAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBuB;AACA;AAOrB;AACE;AAC2B;AACX;AAC2B;;;;AAEhE,SAAS,oBAAoB;IAClC,OAAO,qFAAc,CAAC,+CAAM,CAAC,CAAC;AAChC,CAAC;AA6BM,MAAM,UAAU;;oEAAV,UAAU;uGAAV,UAAU;4GAPV;QACT;YACE,OAAO,EAAE,oDAAM;YACf,QAAQ,EAAE,+CAAM;SACjB;KACF,YAxBQ;YACP,yDAAY;YACZ,oEAAsB,CACpB;gBACE,OAAO,EAAE,yDAAW;gBACpB,UAAU,EAAE,oBAAoB;aACjC,EACD;gBACE,aAAa,EAAE;oBACb,OAAO,EAAE,mEAAqB;oBAC9B,QAAQ,EAAE,yEAA2B;iBACtC;aACF,CACF;YACD,+DAAe;YACf,kEAAqB,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,sDAAa,EAAE,CAAC,CAAC;SAChE;mIAUU,UAAU,mBATN,sDAAa,aAhB1B,yDAAY,gEAaZ,+DAAe,wEAIP,sDAAa","sources":["./projects/demos/app/demo-modules/moment/component.ts","./projects/demos/app/demo-modules/moment/template.html","./projects/demos/app/demo-modules/moment/module.ts"],"sourcesContent":["import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { CalendarEvent, CalendarView, DAYS_OF_WEEK } from 'angular-calendar';\nimport moment from 'moment';\n\n// weekStartsOn option is ignored when using moment, as it needs to be configured globally for the moment locale\nmoment.updateLocale('en', {\n  week: {\n    dow: DAYS_OF_WEEK.MONDAY,\n    doy: 0,\n  },\n});\n\n@Component({\n  selector: 'mwl-demo-component',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: 'template.html',\n})\nexport class DemoComponent {\n  view: CalendarView = CalendarView.Month;\n\n  viewDate: Date = new Date();\n\n  events: CalendarEvent[] = [];\n}\n","<div class=\"alert alert-info\">\n  Use this if you're already using moment heavily in your app and don't want to\n  include date-fns in your bundle, or you need to be able to adjust dates to be\n  in a different timezone than the users browser via moment-locale\n</div>\n\n<mwl-demo-utils-calendar-header [(view)]=\"view\" [(viewDate)]=\"viewDate\">\n</mwl-demo-utils-calendar-header>\n\n<div [ngSwitch]=\"view\">\n  <mwl-calendar-month-view\n    *ngSwitchCase=\"'month'\"\n    [viewDate]=\"viewDate\"\n    [events]=\"events\"\n  >\n  </mwl-calendar-month-view>\n  <mwl-calendar-week-view\n    *ngSwitchCase=\"'week'\"\n    [viewDate]=\"viewDate\"\n    [events]=\"events\"\n  >\n  </mwl-calendar-week-view>\n  <mwl-calendar-day-view\n    *ngSwitchCase=\"'day'\"\n    [viewDate]=\"viewDate\"\n    [events]=\"events\"\n  >\n  </mwl-calendar-day-view>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport {\n  CalendarDateFormatter,\n  CalendarModule,\n  CalendarMomentDateFormatter,\n  DateAdapter,\n  MOMENT,\n} from 'angular-calendar';\nimport moment from 'moment';\nimport { DemoUtilsModule } from '../demo-utils/module';\nimport { DemoComponent } from './component';\nimport { adapterFactory } from 'angular-calendar/date-adapters/moment';\n\nexport function momentAdapterFactory() {\n  return adapterFactory(moment);\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CalendarModule.forRoot(\n      {\n        provide: DateAdapter,\n        useFactory: momentAdapterFactory,\n      },\n      {\n        dateFormatter: {\n          provide: CalendarDateFormatter,\n          useClass: CalendarMomentDateFormatter,\n        },\n      }\n    ),\n    DemoUtilsModule,\n    RouterModule.forChild([{ path: '', component: DemoComponent }]),\n  ],\n  declarations: [DemoComponent],\n  exports: [DemoComponent],\n  providers: [\n    {\n      provide: MOMENT,\n      useValue: moment,\n    },\n  ],\n})\nexport class DemoModule {}\n"],"names":[],"sourceRoot":"webpack:///"}