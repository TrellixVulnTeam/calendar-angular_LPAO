{"version":3,"mappings":"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","names":["toDate","addDays","addHours","addMinutes","addSeconds","differenceInDays","differenceInMinutes","differenceInSeconds","endOfDay","endOfMonth","endOfWeek","getDay","getMonth","isSameDay","isSameMonth","isSameSecond","max","setHours","setMinutes","startOfDay","startOfMinute","startOfMonth","startOfWeek","getHours","getMinutes","getTimezoneOffset","adapterFactory","moment","addWeeks","date","amount","add","addMonths","subDays","subtract","subWeeks","subMonths","getISOWeek","isoWeek","setDate","dayOfMonth","setMonth","month","setYear","year","getDate","getYear","CalendarHeaderComponent","_angular_core__WEBPACK_IMPORTED_MODULE_0__","angular_calendar__WEBPACK_IMPORTED_MODULE_1__","selectors","inputs","view","viewDate","locale","outputs","viewChange","viewDateChange","decls","vars","consts","template","ctx","DemoUtilsModule","_angular_common__WEBPACK_IMPORTED_MODULE_1__","_angular_forms__WEBPACK_IMPORTED_MODULE_2__","angular_calendar__WEBPACK_IMPORTED_MODULE_3__","declarations","_calendar_header_component__WEBPACK_IMPORTED_MODULE_4__","imports","exports"],"sources":["webpack:///node_modules/calendar-utils/date-adapters/esm/moment/index.js","webpack:///projects/angular-calendar/src/date-adapters/moment/index.ts","webpack:///projects/demos/app/demo-modules/demo-utils/calendar-header.component.ts","webpack:///projects/demos/app/demo-modules/demo-utils/module.ts"],"sourcesContent":["export function adapterFactory(moment) {\n    function addDays(date, amount) {\n        return moment(date).add(amount, 'days').toDate();\n    }\n    function addHours(date, amount) {\n        return moment(date).add(amount, 'hours').toDate();\n    }\n    function addMinutes(date, amount) {\n        return moment(date).add(amount, 'minutes').toDate();\n    }\n    function addSeconds(date, amount) {\n        return moment(date).add(amount, 'seconds').toDate();\n    }\n    function differenceInDays(dateLeft, dateRight) {\n        return moment(dateLeft).diff(moment(dateRight), 'days');\n    }\n    function differenceInMinutes(dateLeft, dateRight) {\n        return moment(dateLeft).diff(moment(dateRight), 'minutes');\n    }\n    function differenceInSeconds(dateLeft, dateRight) {\n        return moment(dateLeft).diff(moment(dateRight), 'seconds');\n    }\n    function endOfDay(date) {\n        return moment(date).endOf('day').toDate();\n    }\n    function endOfMonth(date) {\n        return moment(date).endOf('month').toDate();\n    }\n    function endOfWeek(date) {\n        return moment(date).endOf('week').toDate();\n    }\n    function getDay(date) {\n        return moment(date).day();\n    }\n    /* istanbul ignore next */\n    function getMonth(date) {\n        return moment(date).month();\n    }\n    function isSameDay(dateLeft, dateRight) {\n        return moment(dateLeft).isSame(moment(dateRight), 'day');\n    }\n    function isSameMonth(dateLeft, dateRight) {\n        return moment(dateLeft).isSame(moment(dateRight), 'month');\n    }\n    function isSameSecond(dateLeft, dateRight) {\n        return moment(dateLeft).isSame(moment(dateRight), 'second');\n    }\n    function max(dates) {\n        // tslint:disable-line array-type\n        return moment.max(dates.map(function (date) { return moment(date); })).toDate();\n    }\n    function setHours(date, hours) {\n        return moment(date).set('hours', hours).toDate();\n    }\n    function setMinutes(date, minutes) {\n        return moment(date).set('minutes', minutes).toDate();\n    }\n    function startOfDay(date) {\n        return moment(date).startOf('day').toDate();\n    }\n    function startOfMinute(date) {\n        return moment(date).startOf('minute').toDate();\n    }\n    function startOfMonth(date) {\n        return moment(date).startOf('month').toDate();\n    }\n    function startOfWeek(date) {\n        return moment(date).startOf('week').toDate();\n    }\n    function getHours(date) {\n        return moment(date).get('hours');\n    }\n    function getMinutes(date) {\n        return moment(date).get('minutes');\n    }\n    function getTimezoneOffset(date) {\n        return moment(date).utcOffset() * -1;\n    }\n    return {\n        addDays: addDays,\n        addHours: addHours,\n        addMinutes: addMinutes,\n        addSeconds: addSeconds,\n        differenceInDays: differenceInDays,\n        differenceInMinutes: differenceInMinutes,\n        differenceInSeconds: differenceInSeconds,\n        endOfDay: endOfDay,\n        endOfMonth: endOfMonth,\n        endOfWeek: endOfWeek,\n        getDay: getDay,\n        getMonth: getMonth,\n        isSameDay: isSameDay,\n        isSameMonth: isSameMonth,\n        isSameSecond: isSameSecond,\n        max: max,\n        setHours: setHours,\n        setMinutes: setMinutes,\n        startOfDay: startOfDay,\n        startOfMinute: startOfMinute,\n        startOfMonth: startOfMonth,\n        startOfWeek: startOfWeek,\n        getHours: getHours,\n        getMinutes: getMinutes,\n        getTimezoneOffset: getTimezoneOffset,\n    };\n}\n","import { adapterFactory as baseAdapterFactory } from 'calendar-utils/date-adapters/moment';\nimport { DateAdapter } from '../date-adapter';\n\nexport function adapterFactory(moment): DateAdapter {\n  return {\n    ...baseAdapterFactory(moment),\n\n    addWeeks(date: Date | number, amount: number): Date {\n      return moment(date).add(amount, 'weeks').toDate();\n    },\n\n    addMonths(date: Date | number, amount: number): Date {\n      return moment(date).add(amount, 'months').toDate();\n    },\n\n    subDays(date: Date | number, amount: number): Date {\n      return moment(date).subtract(amount, 'days').toDate();\n    },\n\n    subWeeks(date: Date | number, amount: number): Date {\n      return moment(date).subtract(amount, 'weeks').toDate();\n    },\n\n    subMonths(date: Date | number, amount: number): Date {\n      return moment(date).subtract(amount, 'months').toDate();\n    },\n\n    getISOWeek(date: Date | number): number {\n      return moment(date).isoWeek();\n    },\n\n    setDate(date: Date | number, dayOfMonth: number): Date {\n      return moment(date).date(dayOfMonth).toDate();\n    },\n\n    setMonth(date: Date | number, month: number): Date {\n      return moment(date).month(month).toDate();\n    },\n\n    setYear(date: Date | number, year: number): Date {\n      return moment(date).year(year).toDate();\n    },\n\n    getDate(date: Date | number): number {\n      return moment(date).date();\n    },\n\n    getYear(date: Date | number): number {\n      return moment(date).year();\n    },\n  };\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CalendarView } from 'angular-calendar';\n\n@Component({\n  selector: 'mwl-demo-utils-calendar-header',\n  template: `\n    <div class=\"row text-center\">\n      <div class=\"col-md-4\">\n        <div class=\"btn-group\">\n          <div\n            class=\"btn btn-primary\"\n            mwlCalendarPreviousView\n            [view]=\"view\"\n            [(viewDate)]=\"viewDate\"\n            (viewDateChange)=\"viewDateChange.next(viewDate)\"\n          >\n            Previous\n          </div>\n          <div\n            class=\"btn btn-outline-secondary\"\n            mwlCalendarToday\n            [(viewDate)]=\"viewDate\"\n            (viewDateChange)=\"viewDateChange.next(viewDate)\"\n          >\n            Today\n          </div>\n          <div\n            class=\"btn btn-primary\"\n            mwlCalendarNextView\n            [view]=\"view\"\n            [(viewDate)]=\"viewDate\"\n            (viewDateChange)=\"viewDateChange.next(viewDate)\"\n          >\n            Next\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-4\">\n        <h3>{{ viewDate | calendarDate: view + 'ViewTitle':locale }}</h3>\n      </div>\n      <div class=\"col-md-4\">\n        <div class=\"btn-group\">\n          <div\n            class=\"btn btn-primary\"\n            (click)=\"viewChange.emit(CalendarView.Month)\"\n            [class.active]=\"view === CalendarView.Month\"\n          >\n            Month\n          </div>\n          <div\n            class=\"btn btn-primary\"\n            (click)=\"viewChange.emit(CalendarView.Week)\"\n            [class.active]=\"view === CalendarView.Week\"\n          >\n            Week\n          </div>\n          <div\n            class=\"btn btn-primary\"\n            (click)=\"viewChange.emit(CalendarView.Day)\"\n            [class.active]=\"view === CalendarView.Day\"\n          >\n            Day\n          </div>\n        </div>\n      </div>\n    </div>\n    <br />\n  `,\n})\nexport class CalendarHeaderComponent {\n  @Input() view: CalendarView;\n\n  @Input() viewDate: Date;\n\n  @Input() locale: string = 'en';\n\n  @Output() viewChange = new EventEmitter<CalendarView>();\n\n  @Output() viewDateChange = new EventEmitter<Date>();\n\n  CalendarView = CalendarView;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { CalendarModule } from 'angular-calendar';\nimport { CalendarHeaderComponent } from './calendar-header.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, CalendarModule],\n  declarations: [CalendarHeaderComponent],\n  exports: [CalendarHeaderComponent],\n})\nexport class DemoUtilsModule {}\n"]}