{"version":3,"file":"projects_demos_app_demo-modules_group-similar-events_module_ts-es2015.js","mappings":"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","sources":["./node_modules/date-fns/esm/isSameMinute/index.js","./projects/demos/app/demo-modules/demo-utils/calendar-header.component.ts","./projects/demos/app/demo-modules/demo-utils/module.ts","./projects/demos/app/demo-modules/group-similar-events/component.ts","./projects/demos/app/demo-modules/group-similar-events/template.html","./projects/demos/app/demo-modules/group-similar-events/module.ts"],"sourcesContent":["import startOfMinute from \"../startOfMinute/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameMinute\n * @category Minute Helpers\n * @summary Are the given dates in the same minute?\n *\n * @description\n * Are the given dates in the same minute?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same minute\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 2014 06:30:00 and 4 September 2014 06:30:15\n * // in the same minute?\n * var result = isSameMinute(\n *   new Date(2014, 8, 4, 6, 30),\n *   new Date(2014, 8, 4, 6, 30, 15)\n * )\n * //=> true\n */\n\nexport default function isSameMinute(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfMinute = startOfMinute(dirtyDateLeft);\n  var dateRightStartOfMinute = startOfMinute(dirtyDateRight);\n  return dateLeftStartOfMinute.getTime() === dateRightStartOfMinute.getTime();\n}","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CalendarView } from 'angular-calendar';\n\n@Component({\n  selector: 'mwl-demo-utils-calendar-header',\n  template: `\n    <div class=\"row text-center\">\n      <div class=\"col-md-4\">\n        <div class=\"btn-group\">\n          <div\n            class=\"btn btn-primary\"\n            mwlCalendarPreviousView\n            [view]=\"view\"\n            [(viewDate)]=\"viewDate\"\n            (viewDateChange)=\"viewDateChange.next(viewDate)\"\n          >\n            Previous\n          </div>\n          <div\n            class=\"btn btn-outline-secondary\"\n            mwlCalendarToday\n            [(viewDate)]=\"viewDate\"\n            (viewDateChange)=\"viewDateChange.next(viewDate)\"\n          >\n            Today\n          </div>\n          <div\n            class=\"btn btn-primary\"\n            mwlCalendarNextView\n            [view]=\"view\"\n            [(viewDate)]=\"viewDate\"\n            (viewDateChange)=\"viewDateChange.next(viewDate)\"\n          >\n            Next\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-4\">\n        <h3>{{ viewDate | calendarDate: view + 'ViewTitle':locale }}</h3>\n      </div>\n      <div class=\"col-md-4\">\n        <div class=\"btn-group\">\n          <div\n            class=\"btn btn-primary\"\n            (click)=\"viewChange.emit(CalendarView.Month)\"\n            [class.active]=\"view === CalendarView.Month\"\n          >\n            Month\n          </div>\n          <div\n            class=\"btn btn-primary\"\n            (click)=\"viewChange.emit(CalendarView.Week)\"\n            [class.active]=\"view === CalendarView.Week\"\n          >\n            Week\n          </div>\n          <div\n            class=\"btn btn-primary\"\n            (click)=\"viewChange.emit(CalendarView.Day)\"\n            [class.active]=\"view === CalendarView.Day\"\n          >\n            Day\n          </div>\n        </div>\n      </div>\n    </div>\n    <br />\n  `,\n})\nexport class CalendarHeaderComponent {\n  @Input() view: CalendarView;\n\n  @Input() viewDate: Date;\n\n  @Input() locale: string = 'en';\n\n  @Output() viewChange = new EventEmitter<CalendarView>();\n\n  @Output() viewDateChange = new EventEmitter<Date>();\n\n  CalendarView = CalendarView;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { CalendarModule } from 'angular-calendar';\nimport { CalendarHeaderComponent } from './calendar-header.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, CalendarModule],\n  declarations: [CalendarHeaderComponent],\n  exports: [CalendarHeaderComponent],\n})\nexport class DemoUtilsModule {}\n","import { Component, ChangeDetectionStrategy, OnInit } from '@angular/core';\nimport {\n  CalendarEvent,\n  CalendarMonthViewDay,\n  CalendarView,\n} from 'angular-calendar';\nimport { colors } from '../demo-utils/colors';\nimport { isSameMinute, startOfDay } from 'date-fns';\n\ninterface EventGroupMeta {\n  type: string;\n}\n\n@Component({\n  selector: 'mwl-demo-component',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: './template.html',\n  styles: [\n    `\n      .cell-totals {\n        margin: 5px;\n        text-align: center;\n      }\n      .badge {\n        margin-right: 5px;\n      }\n    `,\n  ],\n})\nexport class DemoComponent implements OnInit {\n  view: CalendarView = CalendarView.Month;\n\n  viewDate: Date = new Date();\n\n  events: CalendarEvent[] = [\n    {\n      title: 'Event 1',\n      color: colors.yellow,\n      start: startOfDay(new Date()),\n      meta: {\n        type: 'warning',\n      },\n    },\n    {\n      title: 'Event 2',\n      color: colors.yellow,\n      start: startOfDay(new Date()),\n      meta: {\n        type: 'warning',\n      },\n    },\n    {\n      title: 'Event 3',\n      color: colors.blue,\n      start: startOfDay(new Date()),\n      meta: {\n        type: 'info',\n      },\n    },\n    {\n      title: 'Event 4',\n      color: colors.red,\n      start: startOfDay(new Date()),\n      meta: {\n        type: 'danger',\n      },\n    },\n    {\n      title: 'Event 5',\n      color: colors.red,\n      start: startOfDay(new Date()),\n      meta: {\n        type: 'danger',\n      },\n    },\n  ];\n\n  groupedSimilarEvents: CalendarEvent[] = [];\n\n  ngOnInit() {\n    // group any events together that have the same type and dates\n    // use for when you have a lot of events on the week or day view at the same time\n    this.groupedSimilarEvents = [];\n    const processedEvents = new Set();\n    this.events.forEach((event) => {\n      if (processedEvents.has(event)) {\n        return;\n      }\n      const similarEvents = this.events.filter((otherEvent) => {\n        return (\n          otherEvent !== event &&\n          !processedEvents.has(otherEvent) &&\n          isSameMinute(otherEvent.start, event.start) &&\n          (isSameMinute(otherEvent.end, event.end) ||\n            (!otherEvent.end && !event.end)) &&\n          otherEvent.color.primary === event.color.primary &&\n          otherEvent.color.secondary === event.color.secondary\n        );\n      });\n      processedEvents.add(event);\n      similarEvents.forEach((otherEvent) => {\n        processedEvents.add(otherEvent);\n      });\n      if (similarEvents.length > 0) {\n        this.groupedSimilarEvents.push({\n          title: `${similarEvents.length + 1} events`,\n          color: event.color,\n          start: event.start,\n          end: event.end,\n          meta: {\n            groupedEvents: [event, ...similarEvents],\n          },\n        });\n      } else {\n        this.groupedSimilarEvents.push(event);\n      }\n    });\n  }\n\n  beforeMonthViewRender({\n    body,\n  }: {\n    body: CalendarMonthViewDay<EventGroupMeta>[];\n  }): void {\n    // month view has a different UX from the week and day view so we only really need to group by the type\n    body.forEach((cell) => {\n      const groups = {};\n      cell.events.forEach((event: CalendarEvent<EventGroupMeta>) => {\n        groups[event.meta.type] = groups[event.meta.type] || [];\n        groups[event.meta.type].push(event);\n      });\n      cell['eventGroups'] = Object.entries(groups);\n    });\n  }\n}\n","<mwl-demo-utils-calendar-header [(view)]=\"view\" [(viewDate)]=\"viewDate\">\n</mwl-demo-utils-calendar-header>\n\n<ng-template #customCellTemplate let-day=\"day\" let-locale=\"locale\">\n  <div class=\"cal-cell-top\">\n    <span class=\"cal-day-badge\" *ngIf=\"day.badgeTotal > 0\"\n      >{{ day.badgeTotal }}</span\n    >\n    <span class=\"cal-day-number\"\n      >{{ day.date | calendarDate:'monthViewDayNumber':locale }}</span\n    >\n  </div>\n  <div class=\"cell-totals\">\n    <span\n      *ngFor=\"let group of day.eventGroups\"\n      class=\"badge badge-{{ group[0] }}\"\n    >\n      {{ group[1].length }}\n    </span>\n  </div>\n</ng-template>\n\n<ng-template\n  #customEventTemplate\n  let-weekEvent=\"weekEvent\"\n  let-tooltipPlacement=\"tooltipPlacement\"\n  let-eventClicked=\"eventClicked\"\n  let-tooltipTemplate=\"tooltipTemplate\"\n  let-tooltipAppendToBody=\"tooltipAppendToBody\"\n  let-tooltipDisabled=\"tooltipDisabled\"\n  let-tooltipDelay=\"tooltipDelay\"\n  let-column=\"column\"\n>\n  <ng-template #groupedEventsTemplate>\n    <div style=\"min-width: 150px\">\n      <div *ngFor=\"let event of weekEvent.event.meta.groupedEvents\">\n        <mwl-calendar-event-actions [event]=\"event\">\n        </mwl-calendar-event-actions>\n        &ngsp;\n        <mwl-calendar-event-title [event]=\"event\" view=\"week\">\n        </mwl-calendar-event-title>\n      </div>\n    </div>\n  </ng-template>\n\n  <div\n    [ngbPopover]=\"groupedEventsTemplate\"\n    [disablePopover]=\"!weekEvent.event.meta.groupedEvents\"\n    class=\"cal-event\"\n    [ngStyle]=\"{\n          backgroundColor: weekEvent.event.color?.secondary,\n          borderColor: weekEvent.event.color?.primary\n        }\"\n    [mwlCalendarTooltip]=\"\n          !tooltipDisabled && !weekEvent.event.meta.groupedEvents\n            ? (weekEvent.event.title\n              | calendarEventTitle: 'weekTooltip':weekEvent.event)\n            : ''\n        \"\n    [tooltipPlacement]=\"tooltipPlacement\"\n    [tooltipEvent]=\"weekEvent.event\"\n    [tooltipTemplate]=\"tooltipTemplate\"\n    [tooltipAppendToBody]=\"tooltipAppendToBody\"\n    [tooltipDelay]=\"tooltipDelay\"\n    (mwlClick)=\"eventClicked.emit()\"\n  >\n    <ng-container *ngIf=\"!weekEvent.event.meta.groupedEvents\">\n      <mwl-calendar-event-actions [event]=\"weekEvent.event\">\n      </mwl-calendar-event-actions>\n      &ngsp;\n    </ng-container>\n    <mwl-calendar-event-title [event]=\"weekEvent.event\" view=\"week\">\n    </mwl-calendar-event-title>\n  </div>\n</ng-template>\n\n<div [ngSwitch]=\"view\">\n  <mwl-calendar-month-view\n    *ngSwitchCase=\"'month'\"\n    [viewDate]=\"viewDate\"\n    [events]=\"events\"\n    [cellTemplate]=\"customCellTemplate\"\n    (beforeViewRender)=\"beforeMonthViewRender($event)\"\n    [activeDayIsOpen]=\"true\"\n  >\n  </mwl-calendar-month-view>\n  <mwl-calendar-week-view\n    *ngSwitchCase=\"'week'\"\n    [viewDate]=\"viewDate\"\n    [events]=\"groupedSimilarEvents\"\n    [eventTemplate]=\"customEventTemplate\"\n  >\n  </mwl-calendar-week-view>\n  <mwl-calendar-day-view\n    *ngSwitchCase=\"'day'\"\n    [viewDate]=\"viewDate\"\n    [events]=\"groupedSimilarEvents\"\n    [eventTemplate]=\"customEventTemplate\"\n  >\n  </mwl-calendar-day-view>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\nimport { DemoUtilsModule } from '../demo-utils/module';\nimport { DemoComponent } from './component';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\nimport { NgbPopoverModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CalendarModule.forRoot({\n      provide: DateAdapter,\n      useFactory: adapterFactory,\n    }),\n    NgbPopoverModule,\n    DemoUtilsModule,\n    RouterModule.forChild([{ path: '', component: DemoComponent }]),\n  ],\n  declarations: [DemoComponent],\n  exports: [DemoComponent],\n})\nexport class DemoModule {}\n"],"names":[],"sourceRoot":"webpack:///"}