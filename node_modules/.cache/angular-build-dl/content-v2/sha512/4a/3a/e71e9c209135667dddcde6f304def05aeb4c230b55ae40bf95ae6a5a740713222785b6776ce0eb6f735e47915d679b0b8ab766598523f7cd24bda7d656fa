{"version":3,"mappings":"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","names":["users","id","name","color","_demo_utils_colors__WEBPACK_IMPORTED_MODULE_0__","DemoComponent","Date","title","start","meta","user","resizable","beforeStart","afterEnd","draggable","allDay","event","newStart","newEnd","end","events","newUser","selectors","decls","vars","consts","template","_angular_core__WEBPACK_IMPORTED_MODULE_3__","ctx","_angular_core__WEBPACK_IMPORTED_MODULE_1__","ctx_r22","sourceEvent","ctx_r15","allDayEvent_r16","ctx_r8","ctx_r1","ctx_r29","ctx_r26","ctx_r2","ctx_r45","timeEvent_r34","ctx_r32","column_r31","ctx_r51","date","ctx_r49","ctx_r33","ctx_r4","DayViewSchedulerCalendarUtils","args","period","view","allDayEventRows","hourColumns","forEach","columnIndex","filter","columnView","Object","push","rowIndex","row","offset","span","angular_calendar__WEBPACK_IMPORTED_MODULE_2__","t","factory","DayViewSchedulerComponent","cdr","utils","locale","dateAdapter","element","index","changes","refreshBody","emitBeforeViewRender","eventRowContainer","Math","floor","offsetWidth","length","dayEvent","dragEvent","snapDraggedEvents","getDraggedUserColumn","x","newEventTimes","getDragMovedEventTimes","dayColumnWidth","originalEvent","adjustedEvent","tempEvents","map","restoreOriginalEvents","Map","dragAlreadyMoved","weekEvent","dragEndEvent","dayWidth","useY","userChanged","emit","getWeekView","viewDate","weekStartsOn","excluded","excludeDays","precision","absolutePositionedEvents","hourSegments","dayStart","hour","dayStartHour","minute","dayStartMinute","dayEnd","dayEndHour","dayEndMinute","segmentHeight","hourSegmentHeight","weekendDays","daysInWeek","xPixels","columnsMoved","round","currentColumnIndex","findIndex","newIndex","angular_calendar__WEBPACK_IMPORTED_MODULE_3__","inputs","outputs","features","DemoModule","_angular_common__WEBPACK_IMPORTED_MODULE_1__","provide","useFactory","angular_calendar_date_adapters_date_fns__WEBPACK_IMPORTED_MODULE_4__","_demo_utils_module__WEBPACK_IMPORTED_MODULE_5__","_angular_router__WEBPACK_IMPORTED_MODULE_6__","path","component","_component__WEBPACK_IMPORTED_MODULE_7__","declarations","_day_view_scheduler_component__WEBPACK_IMPORTED_MODULE_8__","imports","exports","CalendarHeaderComponent","_angular_core__WEBPACK_IMPORTED_MODULE_0__","angular_calendar__WEBPACK_IMPORTED_MODULE_1__","viewChange","viewDateChange","DemoUtilsModule","_angular_forms__WEBPACK_IMPORTED_MODULE_2__","_calendar_header_component__WEBPACK_IMPORTED_MODULE_4__"],"sources":["webpack:///projects/demos/app/demo-modules/day-view-scheduler/component.ts","webpack:///projects/demos/app/demo-modules/day-view-scheduler/template.html","webpack:///projects/demos/app/demo-modules/day-view-scheduler/day-view-scheduler.component.html","webpack:///projects/demos/app/demo-modules/day-view-scheduler/day-view-scheduler.component.ts","webpack:///projects/demos/app/demo-modules/day-view-scheduler/module.ts","webpack:///projects/demos/app/demo-modules/demo-utils/calendar-header.component.ts","webpack:///projects/demos/app/demo-modules/demo-utils/module.ts"],"sourcesContent":["import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport {\n  CalendarEvent,\n  CalendarEventTimesChangedEvent,\n} from 'angular-calendar';\nimport { colors } from '../demo-utils/colors';\nimport { addHours, startOfDay } from 'date-fns';\nimport { User } from './day-view-scheduler.component';\n\nconst users: User[] = [\n  {\n    id: 0,\n    name: 'John smith',\n    color: colors.yellow,\n  },\n  {\n    id: 1,\n    name: 'Jane Doe',\n    color: colors.blue,\n  },\n];\n\n@Component({\n  selector: 'mwl-demo-component',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: 'template.html',\n})\nexport class DemoComponent {\n  viewDate = new Date();\n\n  users = users;\n\n  events: CalendarEvent[] = [\n    {\n      title: 'An event',\n      color: users[0].color,\n      start: addHours(startOfDay(new Date()), 5),\n      meta: {\n        user: users[0],\n      },\n      resizable: {\n        beforeStart: true,\n        afterEnd: true,\n      },\n      draggable: true,\n    },\n    {\n      title: 'Another event',\n      color: users[1].color,\n      start: addHours(startOfDay(new Date()), 2),\n      meta: {\n        user: users[1],\n      },\n      resizable: {\n        beforeStart: true,\n        afterEnd: true,\n      },\n      draggable: true,\n    },\n    {\n      title: 'A 3rd event',\n      color: users[0].color,\n      start: addHours(startOfDay(new Date()), 7),\n      meta: {\n        user: users[0],\n      },\n      resizable: {\n        beforeStart: true,\n        afterEnd: true,\n      },\n      draggable: true,\n    },\n    {\n      title: 'An all day event',\n      color: users[0].color,\n      start: new Date(),\n      meta: {\n        user: users[0],\n      },\n      draggable: true,\n      allDay: true,\n    },\n    {\n      title: 'Another all day event',\n      color: users[1].color,\n      start: new Date(),\n      meta: {\n        user: users[1],\n      },\n      draggable: true,\n      allDay: true,\n    },\n    {\n      title: 'A 3rd all day event',\n      color: users[0].color,\n      start: new Date(),\n      meta: {\n        user: users[0],\n      },\n      draggable: true,\n      allDay: true,\n    },\n  ];\n\n  eventTimesChanged({\n    event,\n    newStart,\n    newEnd,\n  }: CalendarEventTimesChangedEvent): void {\n    event.start = newStart;\n    event.end = newEnd;\n    this.events = [...this.events];\n  }\n\n  userChanged({ event, newUser }) {\n    event.color = newUser.color;\n    event.meta.user = newUser;\n    this.events = [...this.events];\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-6\">\n    <div class=\"btn-group\">\n      <div\n        class=\"btn btn-primary\"\n        mwlCalendarPreviousView\n        [view]=\"'day'\"\n        [(viewDate)]=\"viewDate\"\n      >\n        Previous\n      </div>\n      <div\n        class=\"btn btn-outline-secondary\"\n        mwlCalendarToday\n        [(viewDate)]=\"viewDate\"\n      >\n        Today\n      </div>\n      <div\n        class=\"btn btn-primary\"\n        mwlCalendarNextView\n        [view]=\"'day'\"\n        [(viewDate)]=\"viewDate\"\n      >\n        Next\n      </div>\n    </div>\n  </div>\n  <div class=\"col-md-6 text-right\">\n    <h3>{{ viewDate | calendarDate:('dayViewTitle') }}</h3>\n  </div>\n</div>\n<br />\n\n<mwl-day-view-scheduler\n  [viewDate]=\"viewDate\"\n  [events]=\"events\"\n  [users]=\"users\"\n  (eventTimesChanged)=\"eventTimesChanged($event)\"\n  (userChanged)=\"userChanged($event)\"\n>\n</mwl-day-view-scheduler>\n","<div class=\"cal-week-view\" role=\"grid\">\n  <div class=\"cal-day-headers\" role=\"row\">\n    <div\n      class=\"cal-header\"\n      *ngFor=\"let user of users; trackBy: trackByUserId\"\n      tabindex=\"0\"\n      role=\"columnheader\"\n    >\n      <b>{{ user.name }}</b>\n    </div>\n  </div>\n  <div\n    class=\"cal-all-day-events\"\n    #allDayEventsContainer\n    *ngIf=\"view.allDayEventRows.length > 0\"\n    mwlDroppable\n    (dragEnter)=\"dragEnter('allDay')\"\n    (dragLeave)=\"dragLeave('allDay')\"\n  >\n    <div class=\"cal-day-columns\">\n      <div\n        class=\"cal-time-label-column\"\n        [ngTemplateOutlet]=\"allDayEventsLabelTemplate\"\n      ></div>\n      <div\n        class=\"cal-day-column\"\n        *ngFor=\"let day of days; trackBy: trackByWeekDayHeaderDate\"\n        mwlDroppable\n        dragOverClass=\"cal-drag-over\"\n        (drop)=\"eventDropped($event, day.date, true)\"\n        (dragEnter)=\"dateDragEnter(day.date)\"\n      ></div>\n    </div>\n    <div\n      *ngFor=\"let eventRow of view.allDayEventRows; trackBy: trackById\"\n      #eventRowContainer\n      class=\"cal-events-row\"\n    >\n      <div\n        *ngFor=\"\n          let allDayEvent of eventRow.row;\n          trackBy: trackByWeekAllDayEvent\n        \"\n        #event\n        class=\"cal-event-container\"\n        [class.cal-draggable]=\"\n          allDayEvent.event.draggable && allDayEventResizes.size === 0\n        \"\n        [class.cal-starts-within-week]=\"!allDayEvent.startsBeforeWeek\"\n        [class.cal-ends-within-week]=\"!allDayEvent.endsAfterWeek\"\n        [ngClass]=\"allDayEvent.event?.cssClass\"\n        [style.width.%]=\"(100 / users.length) * allDayEvent.span\"\n        [style.marginLeft.%]=\"(100 / users.length) * allDayEvent.offset\"\n        mwlDraggable\n        dragActiveClass=\"cal-drag-active\"\n        [dropData]=\"{ event: allDayEvent.event, calendarId: calendarId }\"\n        [dragAxis]=\"{\n          x: allDayEvent.event.draggable && allDayEventResizes.size === 0,\n          y:\n            !snapDraggedEvents &&\n            allDayEvent.event.draggable &&\n            allDayEventResizes.size === 0\n        }\"\n        [dragSnapGrid]=\"snapDraggedEvents ? { x: dayColumnWidth } : {}\"\n        [validateDrag]=\"validateDrag\"\n        (dragStart)=\"dragStarted(eventRowContainer, event, allDayEvent, false)\"\n        (dragging)=\"allDayEventDragMove()\"\n        (dragEnd)=\"dragEnded(allDayEvent, $event, dayColumnWidth)\"\n      >\n        <mwl-calendar-week-view-event\n          [locale]=\"locale\"\n          [weekEvent]=\"allDayEvent\"\n          [tooltipPlacement]=\"tooltipPlacement\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipAppendToBody]=\"tooltipAppendToBody\"\n          [tooltipDelay]=\"tooltipDelay\"\n          [customTemplate]=\"eventTemplate\"\n          [eventTitleTemplate]=\"eventTitleTemplate\"\n          [eventActionsTemplate]=\"eventActionsTemplate\"\n          [daysInWeek]=\"daysInWeek\"\n          (eventClicked)=\"\n            eventClicked.emit({\n              event: allDayEvent.event,\n              sourceEvent: $event.sourceEvent\n            })\n          \"\n        >\n        </mwl-calendar-week-view-event>\n      </div>\n    </div>\n  </div>\n  <div\n    class=\"cal-time-events\"\n    mwlDroppable\n    (dragEnter)=\"dragEnter('time')\"\n    (dragLeave)=\"dragLeave('time')\"\n  >\n    <div class=\"cal-time-label-column\" *ngIf=\"view.hourColumns.length > 0\">\n      <div\n        *ngFor=\"\n          let hour of view.hourColumns[0].hours;\n          trackBy: trackByHour;\n          let odd = odd\n        \"\n        class=\"cal-hour\"\n        [class.cal-hour-odd]=\"odd\"\n      >\n        <mwl-calendar-week-view-hour-segment\n          *ngFor=\"let segment of hour.segments; trackBy: trackByHourSegment\"\n          [style.height.px]=\"hourSegmentHeight\"\n          [segment]=\"segment\"\n          [segmentHeight]=\"hourSegmentHeight\"\n          [locale]=\"locale\"\n          [customTemplate]=\"hourSegmentTemplate\"\n          [isTimeLabel]=\"true\"\n        >\n        </mwl-calendar-week-view-hour-segment>\n      </div>\n    </div>\n    <div\n      class=\"cal-day-columns\"\n      [class.cal-resize-active]=\"timeEventResizes.size > 0\"\n      #dayColumns\n    >\n      <div\n        class=\"cal-day-column\"\n        *ngFor=\"let column of view.hourColumns; trackBy: trackByHourColumn\"\n      >\n        <mwl-calendar-week-view-current-time-marker\n          [columnDate]=\"column.date\"\n          [dayStartHour]=\"dayStartHour\"\n          [dayStartMinute]=\"dayStartMinute\"\n          [dayEndHour]=\"dayEndHour\"\n          [dayEndMinute]=\"dayEndMinute\"\n          [hourSegments]=\"hourSegments\"\n          [hourSegmentHeight]=\"hourSegmentHeight\"\n          [customTemplate]=\"currentTimeMarkerTemplate\"\n        ></mwl-calendar-week-view-current-time-marker>\n        <div\n          *ngFor=\"let timeEvent of column.events; trackBy: trackByWeekTimeEvent\"\n          #event\n          class=\"cal-event-container\"\n          [class.cal-draggable]=\"\n            timeEvent.event.draggable && timeEventResizes.size === 0\n          \"\n          [class.cal-starts-within-day]=\"!timeEvent.startsBeforeDay\"\n          [class.cal-ends-within-day]=\"!timeEvent.endsAfterDay\"\n          [ngClass]=\"timeEvent.event.cssClass\"\n          [hidden]=\"timeEvent.height === 0 && timeEvent.width === 0\"\n          [style.top.px]=\"timeEvent.top\"\n          [style.height.px]=\"timeEvent.height\"\n          [style.left.%]=\"timeEvent.left\"\n          [style.width.%]=\"timeEvent.width\"\n          mwlResizable\n          [resizeSnapGrid]=\"{\n            left: dayColumnWidth,\n            right: dayColumnWidth,\n            top: eventSnapSize || hourSegmentHeight,\n            bottom: eventSnapSize || hourSegmentHeight\n          }\"\n          [validateResize]=\"validateResize\"\n          [allowNegativeResizes]=\"true\"\n          (resizeStart)=\"timeEventResizeStarted(dayColumns, timeEvent, $event)\"\n          (resizing)=\"timeEventResizing(timeEvent, $event)\"\n          (resizeEnd)=\"timeEventResizeEnded(timeEvent)\"\n          mwlDraggable\n          dragActiveClass=\"cal-drag-active\"\n          [dropData]=\"{ event: timeEvent.event, calendarId: calendarId }\"\n          [dragAxis]=\"{\n            x: timeEvent.event.draggable && timeEventResizes.size === 0,\n            y: timeEvent.event.draggable && timeEventResizes.size === 0\n          }\"\n          [dragSnapGrid]=\"\n            snapDraggedEvents\n              ? { x: dayColumnWidth, y: eventSnapSize || hourSegmentHeight }\n              : {}\n          \"\n          [ghostDragEnabled]=\"!snapDraggedEvents\"\n          [validateDrag]=\"validateDrag\"\n          (dragStart)=\"dragStarted(dayColumns, event, timeEvent, true)\"\n          (dragging)=\"dragMove(timeEvent, $event)\"\n          (dragEnd)=\"dragEnded(timeEvent, $event, dayColumnWidth, true)\"\n        >\n          <div\n            class=\"cal-resize-handle cal-resize-handle-before-start\"\n            *ngIf=\"\n              timeEvent.event?.resizable?.beforeStart &&\n              !timeEvent.startsBeforeDay\n            \"\n            mwlResizeHandle\n            [resizeEdges]=\"{\n              left: true,\n              top: true\n            }\"\n          ></div>\n          <mwl-calendar-week-view-event\n            [locale]=\"locale\"\n            [weekEvent]=\"timeEvent\"\n            [tooltipPlacement]=\"tooltipPlacement\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [tooltipAppendToBody]=\"tooltipAppendToBody\"\n            [tooltipDisabled]=\"dragActive || timeEventResizes.size > 0\"\n            [tooltipDelay]=\"tooltipDelay\"\n            [customTemplate]=\"eventTemplate\"\n            [eventTitleTemplate]=\"eventTitleTemplate\"\n            [eventActionsTemplate]=\"eventActionsTemplate\"\n            [column]=\"column\"\n            (eventClicked)=\"\n              eventClicked.emit({\n                event: timeEvent.event,\n                sourceEvent: $event.sourceEvent\n              })\n            \"\n          >\n          </mwl-calendar-week-view-event>\n          <div\n            class=\"cal-resize-handle cal-resize-handle-after-end\"\n            *ngIf=\"\n              timeEvent.event?.resizable?.afterEnd && !timeEvent.endsAfterDay\n            \"\n            mwlResizeHandle\n            [resizeEdges]=\"{\n              right: true,\n              bottom: true\n            }\"\n          ></div>\n        </div>\n\n        <div\n          *ngFor=\"let hour of column.hours; trackBy: trackByHour; let odd = odd\"\n          class=\"cal-hour\"\n          [class.cal-hour-odd]=\"odd\"\n        >\n          <mwl-calendar-week-view-hour-segment\n            *ngFor=\"let segment of hour.segments; trackBy: trackByHourSegment\"\n            [style.height.px]=\"hourSegmentHeight\"\n            [segment]=\"segment\"\n            [segmentHeight]=\"hourSegmentHeight\"\n            [locale]=\"locale\"\n            [customTemplate]=\"hourSegmentTemplate\"\n            (mwlClick)=\"\n              hourSegmentClicked.emit({\n                date: segment.date,\n                sourceEvent: $event\n              })\n            \"\n            [clickListenerDisabled]=\"hourSegmentClicked.observers.length === 0\"\n            mwlDroppable\n            [dragOverClass]=\"\n              !dragActive || !snapDraggedEvents ? 'cal-drag-over' : null\n            \"\n            dragActiveClass=\"cal-drag-active\"\n            (drop)=\"eventDropped($event, segment.date, false)\"\n          >\n          </mwl-calendar-week-view-hour-segment>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Injectable,\n  Input,\n  LOCALE_ID,\n  OnChanges,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport {\n  CalendarUtils,\n  CalendarWeekViewComponent,\n  DateAdapter,\n  getWeekViewPeriod,\n} from 'angular-calendar';\nimport {\n  WeekView,\n  GetWeekViewArgs,\n  WeekViewTimeEvent,\n  EventColor,\n  CalendarEvent,\n  WeekViewAllDayEventRow,\n  WeekViewAllDayEvent,\n} from 'calendar-utils';\nimport { DragEndEvent, DragMoveEvent } from 'angular-draggable-droppable';\n\nexport interface User {\n  id: number;\n  name: string;\n  color: EventColor;\n}\n\ninterface DayViewScheduler extends WeekView {\n  users: User[];\n}\n\ninterface GetWeekViewArgsWithUsers extends GetWeekViewArgs {\n  users: User[];\n}\n\n@Injectable()\nexport class DayViewSchedulerCalendarUtils extends CalendarUtils {\n  getWeekView(args: GetWeekViewArgsWithUsers): DayViewScheduler {\n    const { period } = super.getWeekView(args);\n    const view: DayViewScheduler = {\n      period,\n      allDayEventRows: [],\n      hourColumns: [],\n      users: [...args.users],\n    };\n\n    view.users.forEach((user, columnIndex) => {\n      const events = args.events.filter(\n        (event) => event.meta.user.id === user.id\n      );\n      const columnView = super.getWeekView({\n        ...args,\n        events,\n      });\n      view.hourColumns.push(columnView.hourColumns[0]);\n      columnView.allDayEventRows.forEach(({ row }, rowIndex) => {\n        view.allDayEventRows[rowIndex] = view.allDayEventRows[rowIndex] || {\n          row: [],\n        };\n        view.allDayEventRows[rowIndex].row.push({\n          ...row[0],\n          offset: columnIndex,\n          span: 1,\n        });\n      });\n    });\n\n    return view;\n  }\n}\n\n@Component({\n  selector: 'mwl-day-view-scheduler',\n  templateUrl: 'day-view-scheduler.component.html',\n  providers: [DayViewSchedulerCalendarUtils],\n})\nexport class DayViewSchedulerComponent\n  extends CalendarWeekViewComponent\n  implements OnChanges\n{\n  @Input() users: User[] = [];\n\n  @Output() userChanged = new EventEmitter();\n\n  view: DayViewScheduler;\n\n  daysInWeek = 1;\n\n  constructor(\n    protected cdr: ChangeDetectorRef,\n    protected utils: DayViewSchedulerCalendarUtils,\n    @Inject(LOCALE_ID) locale: string,\n    protected dateAdapter: DateAdapter,\n    protected element: ElementRef<HTMLElement>\n  ) {\n    super(cdr, utils, locale, dateAdapter, element);\n  }\n\n  trackByUserId = (index: number, row: User) => row.id;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    super.ngOnChanges(changes);\n\n    if (changes.users) {\n      this.refreshBody();\n      this.emitBeforeViewRender();\n    }\n  }\n\n  getDayColumnWidth(eventRowContainer: HTMLElement): number {\n    return Math.floor(eventRowContainer.offsetWidth / this.users.length);\n  }\n\n  dragMove(dayEvent: WeekViewTimeEvent, dragEvent: DragMoveEvent) {\n    if (this.snapDraggedEvents) {\n      const newUser = this.getDraggedUserColumn(dayEvent, dragEvent.x);\n      const newEventTimes = this.getDragMovedEventTimes(\n        dayEvent,\n        { ...dragEvent, x: 0 },\n        this.dayColumnWidth,\n        true\n      );\n      const originalEvent = dayEvent.event;\n      const adjustedEvent = {\n        ...originalEvent,\n        ...newEventTimes,\n        meta: { ...originalEvent.meta, user: newUser },\n      };\n      const tempEvents = this.events.map((event) => {\n        if (event === originalEvent) {\n          return adjustedEvent;\n        }\n        return event;\n      });\n      this.restoreOriginalEvents(\n        tempEvents,\n        new Map([[adjustedEvent, originalEvent]])\n      );\n    }\n    this.dragAlreadyMoved = true;\n  }\n\n  dragEnded(\n    weekEvent: WeekViewAllDayEvent | WeekViewTimeEvent,\n    dragEndEvent: DragEndEvent,\n    dayWidth: number,\n    useY = false\n  ) {\n    super.dragEnded(\n      weekEvent,\n      {\n        ...dragEndEvent,\n        x: 0,\n      },\n      dayWidth,\n      useY\n    );\n    const newUser = this.getDraggedUserColumn(weekEvent, dragEndEvent.x);\n    if (newUser && newUser !== weekEvent.event.meta.user) {\n      this.userChanged.emit({ event: weekEvent.event, newUser });\n    }\n  }\n\n  protected getWeekView(events: CalendarEvent[]) {\n    return this.utils.getWeekView({\n      events,\n      users: this.users,\n      viewDate: this.viewDate,\n      weekStartsOn: this.weekStartsOn,\n      excluded: this.excludeDays,\n      precision: this.precision,\n      absolutePositionedEvents: true,\n      hourSegments: this.hourSegments,\n      dayStart: {\n        hour: this.dayStartHour,\n        minute: this.dayStartMinute,\n      },\n      dayEnd: {\n        hour: this.dayEndHour,\n        minute: this.dayEndMinute,\n      },\n      segmentHeight: this.hourSegmentHeight,\n      weekendDays: this.weekendDays,\n      ...getWeekViewPeriod(\n        this.dateAdapter,\n        this.viewDate,\n        this.weekStartsOn,\n        this.excludeDays,\n        this.daysInWeek\n      ),\n    });\n  }\n\n  private getDraggedUserColumn(\n    dayEvent: WeekViewTimeEvent | WeekViewAllDayEvent,\n    xPixels: number\n  ) {\n    const columnsMoved = Math.round(xPixels / this.dayColumnWidth);\n    const currentColumnIndex = this.view.users.findIndex(\n      (user) => user === dayEvent.event.meta.user\n    );\n    const newIndex = currentColumnIndex + columnsMoved;\n    return this.view.users[newIndex];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\nimport { DemoUtilsModule } from '../demo-utils/module';\nimport { DemoComponent } from './component';\nimport { DayViewSchedulerComponent } from './day-view-scheduler.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CalendarModule.forRoot({\n      provide: DateAdapter,\n      useFactory: adapterFactory,\n    }),\n    DemoUtilsModule,\n    RouterModule.forChild([{ path: '', component: DemoComponent }]),\n  ],\n  declarations: [DemoComponent, DayViewSchedulerComponent],\n  exports: [DemoComponent],\n})\nexport class DemoModule {}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CalendarView } from 'angular-calendar';\n\n@Component({\n  selector: 'mwl-demo-utils-calendar-header',\n  template: `\n    <div class=\"row text-center\">\n      <div class=\"col-md-4\">\n        <div class=\"btn-group\">\n          <div\n            class=\"btn btn-primary\"\n            mwlCalendarPreviousView\n            [view]=\"view\"\n            [(viewDate)]=\"viewDate\"\n            (viewDateChange)=\"viewDateChange.next(viewDate)\"\n          >\n            Previous\n          </div>\n          <div\n            class=\"btn btn-outline-secondary\"\n            mwlCalendarToday\n            [(viewDate)]=\"viewDate\"\n            (viewDateChange)=\"viewDateChange.next(viewDate)\"\n          >\n            Today\n          </div>\n          <div\n            class=\"btn btn-primary\"\n            mwlCalendarNextView\n            [view]=\"view\"\n            [(viewDate)]=\"viewDate\"\n            (viewDateChange)=\"viewDateChange.next(viewDate)\"\n          >\n            Next\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-4\">\n        <h3>{{ viewDate | calendarDate: view + 'ViewTitle':locale }}</h3>\n      </div>\n      <div class=\"col-md-4\">\n        <div class=\"btn-group\">\n          <div\n            class=\"btn btn-primary\"\n            (click)=\"viewChange.emit(CalendarView.Month)\"\n            [class.active]=\"view === CalendarView.Month\"\n          >\n            Month\n          </div>\n          <div\n            class=\"btn btn-primary\"\n            (click)=\"viewChange.emit(CalendarView.Week)\"\n            [class.active]=\"view === CalendarView.Week\"\n          >\n            Week\n          </div>\n          <div\n            class=\"btn btn-primary\"\n            (click)=\"viewChange.emit(CalendarView.Day)\"\n            [class.active]=\"view === CalendarView.Day\"\n          >\n            Day\n          </div>\n        </div>\n      </div>\n    </div>\n    <br />\n  `,\n})\nexport class CalendarHeaderComponent {\n  @Input() view: CalendarView;\n\n  @Input() viewDate: Date;\n\n  @Input() locale: string = 'en';\n\n  @Output() viewChange = new EventEmitter<CalendarView>();\n\n  @Output() viewDateChange = new EventEmitter<Date>();\n\n  CalendarView = CalendarView;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { CalendarModule } from 'angular-calendar';\nimport { CalendarHeaderComponent } from './calendar-header.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, CalendarModule],\n  declarations: [CalendarHeaderComponent],\n  exports: [CalendarHeaderComponent],\n})\nexport class DemoUtilsModule {}\n"]}