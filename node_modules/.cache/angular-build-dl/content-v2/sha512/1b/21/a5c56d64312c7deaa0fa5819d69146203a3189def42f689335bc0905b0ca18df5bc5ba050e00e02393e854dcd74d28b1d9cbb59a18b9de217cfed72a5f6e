{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAqEaA,2BAlEb;AAAA;;AAuEW,sBAAiB,IAAjB;AAEC,0BAAa,IAAIC,uDAAJ,EAAb;AAEA,8BAAiB,IAAIA,uDAAJ,EAAjB;AAEV,4BAAeC,0DAAf;AACD;;;yBAZYF;AAAuB;;;cAAvBA;AAAuBG;AAAAC;AAAAC;AAAAC;AAAAC;AAAA;AAAAC;AAAAC;AAAAC;AAAA;AAAAC;AAAAC;AAAAC;AAAAC;AAAA;AA/DhCb;;AAAAA;;AACEA;;AAAAA;;AACEA;;AAAAA;;AACEA;;AAAAA;;AAIEA;AAAA;AAAA,eAAuB,gBAAvB,EAAuB;AAAA,qBACLc,qCADK;AACwB,aAD/C;;AAGAd;;AACFA;;AACAA;;AAAAA;;AAGEA;AAAA;AAAA,eAAuB,gBAAvB,EAAuB;AAAA,qBACLc,qCADK;AACwB,aAD/C;;AAGAd;;AACFA;;AACAA;;AAAAA;;AAIEA;AAAA;AAAA,eAAuB,gBAAvB,EAAuB;AAAA,qBACLc,qCADK;AACwB,aAD/C;;AAGAd;;AACFA;;AACFA;;AAAAA;;AACFA;;AAAAA;;AACAA;;AAAAA;;AACEA;;AAAAA;;AAAIA;;;;AAAwDA;;AAC9DA;;AAAAA;;AACAA;;AAAAA;;AACEA;;AAAAA;;AACEA;;AAAAA;;AAEEA;AAAA,qBAASc,2CAAT;AAA4C,aAA5C;;AAGAd;;AACFA;;AACAA;;AAAAA;;AAEEA;AAAA,qBAASc,0CAAT;AAA2C,aAA3C;;AAGAd;;AACFA;;AACAA;;AAAAA;;AAEEA;AAAA,qBAASc,yCAAT;AAA0C,aAA1C;;AAGAd;;AACFA;;AACFA;;AAAAA;;AACFA;;AAAAA;;AACFA;;AAAAA;;AACAA;;AAAAA;;AACFA;;;;AAvDUA;;AAAAA,uFAAa,UAAb,EAAac,YAAb;;AASAd;;AAAAA;;AAQAA;;AAAAA,uFAAa,UAAb,EAAac,YAAb;;AASAd;;AAAAA;;AAOAA;;AAAAA;;AAOAA;;AAAAA;;AAOAA;;AAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UChDCe;;;;;yBAAAA;AAAe;;;cAAfA;;;kBAJF,CAACC,yDAAD,EAAeC,uDAAf,EAA4BC,4DAA5B;;;;4HAIEH,kBAAe;AAAAI,yBAHXC,+EAGW;AAHYC,oBAD5BL,yDAC4B,EADdC,uDACc,EADDC,4DACC,CAGZ;AAJyBI,oBAEzCF,+EAFyC;AAIzB;AAFO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCAtBG;AALb;AAAA;;AAME,0BAAiB,IAAIC,IAAJ,EAAjB;AAEA,wBAA6D,CAC3D;AACEC,iBAAK,EAAE,wCADT;AAEEC,iBAAK,EAAEC,6DAFT;AAGEC,iBAAK,EAAE,IAAIJ,IAAJ,EAHT;AAIEK,gBAAI,EAAE;AACJC,kCAAoB,EAAE;AADlB;AAJR,WAD2D,EAS3D;AACEL,iBAAK,EAAE,oDADT;AAEEC,iBAAK,EAAEC,2DAFT;AAGEC,iBAAK,EAAE,IAAIJ,IAAJ,EAHT;AAIEK,gBAAI,EAAE;AACJC,kCAAoB,EAAE;AADlB;AAJR,WAT2D,CAA7D;AA0BD;;;;iBAPC,qCAAgE;AAAA,gBAAxCC,IAAwC,QAAxCA,IAAwC;AAC9DA,gBAAI,CAACC,OAAL,CAAa,UAACC,GAAD,EAAQ;AACnBA,iBAAG,CAACC,UAAJ,GAAiBD,GAAG,CAACE,MAAJ,CAAWC,MAAX,CACf,UAACC,KAAD;AAAA,uBAAWA,KAAK,CAACR,IAAN,CAAWC,oBAAtB;AAAA,eADe,EAEfQ,MAFF;AAGD,aAJD;AAKD;;;;;;;yBA5BUf;AAAa;;;cAAbA;AAAarB;AAAAQ;AAAAC;AAAAC;AAAAC;AAAA;ACT1B0B;;AAIEA;AAAA,qBAAoBzB,iCAApB;AAAiD,aAAjD;;AAEFyB;;AAAAA;;AACAA;;;;AANEA,+FAAqB,QAArB,EAAqBzB,UAArB,EAAqB,iBAArB,EAAqB,IAArB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCoBW0B;;;;;yBAAAA;AAAU;;;cAAVA;;;kBAZF,CACPxB,yDADO,EAEPyB,qEAAuB;AACrBC,iBAAO,EAAExB,yDADY;AAErByB,oBAAU,EAAEC;AAFS,SAAvB,CAFO,EAMPC,+DANO,EAOPC,mEAAsB,CAAC;AAAEC,cAAI,EAAE,EAAR;AAAYC,mBAAS,EAAEC;AAAvB,SAAD,CAAtB,CAPO;;;;4HAYET,aAAU;AAAArB,yBAHN8B,qDAGM;AAHO5B,oBAR1BL,yDAQ0B,EARdyB,4DAQc,EAH1BI,+DAG0B,EAHXC,yDAGW,CAGP;AANJxB,oBAIP2B,qDAJO;AAMI;AAFE;;;;","names":["CalendarHeaderComponent","_angular_core__WEBPACK_IMPORTED_MODULE_0__","angular_calendar__WEBPACK_IMPORTED_MODULE_1__","selectors","inputs","view","viewDate","locale","outputs","viewChange","viewDateChange","decls","vars","consts","template","ctx","DemoUtilsModule","_angular_common__WEBPACK_IMPORTED_MODULE_1__","_angular_forms__WEBPACK_IMPORTED_MODULE_2__","angular_calendar__WEBPACK_IMPORTED_MODULE_3__","declarations","_calendar_header_component__WEBPACK_IMPORTED_MODULE_4__","imports","exports","DemoComponent","Date","title","color","_demo_utils_colors__WEBPACK_IMPORTED_MODULE_0__","start","meta","incrementsBadgeTotal","body","forEach","day","badgeTotal","events","filter","event","length","_angular_core__WEBPACK_IMPORTED_MODULE_1__","DemoModule","angular_calendar__WEBPACK_IMPORTED_MODULE_2__","provide","useFactory","angular_calendar_date_adapters_date_fns__WEBPACK_IMPORTED_MODULE_4__","_demo_utils_module__WEBPACK_IMPORTED_MODULE_5__","_angular_router__WEBPACK_IMPORTED_MODULE_6__","path","component","_component__WEBPACK_IMPORTED_MODULE_7__"],"sources":["webpack:///projects/demos/app/demo-modules/demo-utils/calendar-header.component.ts","webpack:///projects/demos/app/demo-modules/demo-utils/module.ts","webpack:///projects/demos/app/demo-modules/month-view-badge-total/component.ts","webpack:///projects/demos/app/demo-modules/month-view-badge-total/template.html","webpack:///projects/demos/app/demo-modules/month-view-badge-total/module.ts"],"sourcesContent":["import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CalendarView } from 'angular-calendar';\n\n@Component({\n  selector: 'mwl-demo-utils-calendar-header',\n  template: `\n    <div class=\"row text-center\">\n      <div class=\"col-md-4\">\n        <div class=\"btn-group\">\n          <div\n            class=\"btn btn-primary\"\n            mwlCalendarPreviousView\n            [view]=\"view\"\n            [(viewDate)]=\"viewDate\"\n            (viewDateChange)=\"viewDateChange.next(viewDate)\"\n          >\n            Previous\n          </div>\n          <div\n            class=\"btn btn-outline-secondary\"\n            mwlCalendarToday\n            [(viewDate)]=\"viewDate\"\n            (viewDateChange)=\"viewDateChange.next(viewDate)\"\n          >\n            Today\n          </div>\n          <div\n            class=\"btn btn-primary\"\n            mwlCalendarNextView\n            [view]=\"view\"\n            [(viewDate)]=\"viewDate\"\n            (viewDateChange)=\"viewDateChange.next(viewDate)\"\n          >\n            Next\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-4\">\n        <h3>{{ viewDate | calendarDate: view + 'ViewTitle':locale }}</h3>\n      </div>\n      <div class=\"col-md-4\">\n        <div class=\"btn-group\">\n          <div\n            class=\"btn btn-primary\"\n            (click)=\"viewChange.emit(CalendarView.Month)\"\n            [class.active]=\"view === CalendarView.Month\"\n          >\n            Month\n          </div>\n          <div\n            class=\"btn btn-primary\"\n            (click)=\"viewChange.emit(CalendarView.Week)\"\n            [class.active]=\"view === CalendarView.Week\"\n          >\n            Week\n          </div>\n          <div\n            class=\"btn btn-primary\"\n            (click)=\"viewChange.emit(CalendarView.Day)\"\n            [class.active]=\"view === CalendarView.Day\"\n          >\n            Day\n          </div>\n        </div>\n      </div>\n    </div>\n    <br />\n  `,\n})\nexport class CalendarHeaderComponent {\n  @Input() view: CalendarView;\n\n  @Input() viewDate: Date;\n\n  @Input() locale: string = 'en';\n\n  @Output() viewChange = new EventEmitter<CalendarView>();\n\n  @Output() viewDateChange = new EventEmitter<Date>();\n\n  CalendarView = CalendarView;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { CalendarModule } from 'angular-calendar';\nimport { CalendarHeaderComponent } from './calendar-header.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, CalendarModule],\n  declarations: [CalendarHeaderComponent],\n  exports: [CalendarHeaderComponent],\n})\nexport class DemoUtilsModule {}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { CalendarEvent, CalendarMonthViewDay } from 'angular-calendar';\nimport { colors } from '../demo-utils/colors';\n\n@Component({\n  selector: 'mwl-demo-component',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: 'template.html',\n})\nexport class DemoComponent {\n  viewDate: Date = new Date();\n\n  events: CalendarEvent<{ incrementsBadgeTotal: boolean }>[] = [\n    {\n      title: 'Increments badge total on the day cell',\n      color: colors.yellow,\n      start: new Date(),\n      meta: {\n        incrementsBadgeTotal: true,\n      },\n    },\n    {\n      title: 'Does not increment the badge total on the day cell',\n      color: colors.blue,\n      start: new Date(),\n      meta: {\n        incrementsBadgeTotal: false,\n      },\n    },\n  ];\n\n  beforeMonthViewRender({ body }: { body: CalendarMonthViewDay[] }): void {\n    body.forEach((day) => {\n      day.badgeTotal = day.events.filter(\n        (event) => event.meta.incrementsBadgeTotal\n      ).length;\n    });\n  }\n}\n","<mwl-calendar-month-view\n  [viewDate]=\"viewDate\"\n  [events]=\"events\"\n  [activeDayIsOpen]=\"true\"\n  (beforeViewRender)=\"beforeMonthViewRender($event)\"\n>\n</mwl-calendar-month-view>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\nimport { DemoUtilsModule } from '../demo-utils/module';\nimport { DemoComponent } from './component';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CalendarModule.forRoot({\n      provide: DateAdapter,\n      useFactory: adapterFactory,\n    }),\n    DemoUtilsModule,\n    RouterModule.forChild([{ path: '', component: DemoComponent }]),\n  ],\n  declarations: [DemoComponent],\n  exports: [DemoComponent],\n})\nexport class DemoModule {}\n"]}