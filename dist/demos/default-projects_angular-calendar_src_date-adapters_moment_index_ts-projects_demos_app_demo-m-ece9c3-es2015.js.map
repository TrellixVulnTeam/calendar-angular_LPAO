{"version":3,"file":"default-projects_angular-calendar_src_date-adapters_moment_index_ts-projects_demos_app_demo-m-ece9c3-es2015.js","mappings":";;;;;;;;;;;;;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,sBAAsB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACzG2F;AAGpF,SAAS,cAAc,CAAC,MAAM;IACnC,uCACK,mFAAkB,CAAC,MAAM,CAAC,KAE7B,QAAQ,CAAC,IAAmB,EAAE,MAAc;YAC1C,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;QACpD,CAAC;QAED,SAAS,CAAC,IAAmB,EAAE,MAAc;YAC3C,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC;QACrD,CAAC;QAED,OAAO,CAAC,IAAmB,EAAE,MAAc;YACzC,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC;QACxD,CAAC;QAED,QAAQ,CAAC,IAAmB,EAAE,MAAc;YAC1C,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;QACzD,CAAC;QAED,SAAS,CAAC,IAAmB,EAAE,MAAc;YAC3C,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC;QAC1D,CAAC;QAED,UAAU,CAAC,IAAmB;YAC5B,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC;QAChC,CAAC;QAED,OAAO,CAAC,IAAmB,EAAE,UAAkB;YAC7C,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,EAAE,CAAC;QAChD,CAAC;QAED,QAAQ,CAAC,IAAmB,EAAE,KAAa;YACzC,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC;QAC5C,CAAC;QAED,OAAO,CAAC,IAAmB,EAAE,IAAY;YACvC,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC;QAC1C,CAAC;QAED,OAAO,CAAC,IAAmB;YACzB,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;QAC7B,CAAC;QAED,OAAO,CAAC,IAAmB;YACzB,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;QAC7B,CAAC,IACD;AACJ,CAAC;;;;;;;;;;;;;;;;;;;;;ACnDsE;AACvB;;;;;;AAoEzC,MAAM,uBAAuB;IAlEpC;QAuEW,WAAM,GAAW,IAAI,CAAC;QAErB,eAAU,GAAG,IAAI,uDAAY,EAAgB,CAAC;QAE9C,mBAAc,GAAG,IAAI,uDAAY,EAAQ,CAAC;QAEpD,iBAAY,GAAG,0DAAY,CAAC;KAC7B;;8FAZY,uBAAuB;qHAAvB,uBAAuB;QA/DhC;QAAA,yEAA6B;QAC3B;QAAA,yEAAsB;QACpB;QAAA,yEAAuB;QACrB;QAAA,yEAMC;QAFC,6LAAuB,sGACL,qCAA6B,IADxB;QAGvB,6FACF;QAAA,4DAAM;QACN;QAAA,0EAKC;QAFC,8LAAuB,uGACL,qCAA6B,IADxB;QAGvB,2FACF;QAAA,4DAAM;QACN;QAAA,0EAMC;QAFC,8LAAuB,uGACL,qCAA6B,IADxB;QAGvB,0FACF;QAAA,4DAAM;QACR;QAAA,4DAAM;QACR;QAAA,4DAAM;QACN;QAAA,0EAAsB;QACpB;QAAA,sEAAI;QAAA,wDAAwD;;QAAA,4DAAK;QACnE;QAAA,4DAAM;QACN;QAAA,0EAAsB;QACpB;QAAA,0EAAuB;QACrB;QAAA,0EAIC;QAFC,6IAAS,2CAAmC,IAAC;QAG7C,2FACF;QAAA,4DAAM;QACN;QAAA,0EAIC;QAFC,6IAAS,0CAAkC,IAAC;QAG5C,0FACF;QAAA,4DAAM;QACN;QAAA,0EAIC;QAFC,6IAAS,yCAAiC,IAAC;QAG3C,yFACF;QAAA,4DAAM;QACR;QAAA,4DAAM;QACR;QAAA,4DAAM;QACR;QAAA,4DAAM;QACN;QAAA,iEAAM;QACR;;QAvDU,0DAAa;QAAb,0EAAa;QASb,0DAAuB;QAAvB,kFAAuB;QAQvB,0DAAa;QAAb,0EAAa;QASb,0DAAwD;QAAxD,oLAAwD;QAOxD,0DAA4C;QAA5C,wGAA4C;QAO5C,0DAA2C;QAA3C,uGAA2C;QAO3C,0DAA0C;QAA1C,sGAA0C;;;;;;;;;;;;;;;;;;;;;AC1DP;AACF;AACK;AACoB;;AAO/D,MAAM,eAAe;;8EAAf,eAAe;4GAAf,eAAe;gHAJjB,CAAC,yDAAY,EAAE,uDAAW,EAAE,4DAAc,CAAC;mIAIzC,eAAe,mBAHX,+EAAuB,aAD5B,yDAAY,EAAE,uDAAW,EAAE,4DAAc,aAEzC,+EAAuB","sources":["./node_modules/calendar-utils/date-adapters/esm/moment/index.js","./projects/angular-calendar/src/date-adapters/moment/index.ts","./projects/demos/app/demo-modules/demo-utils/calendar-header.component.ts","./projects/demos/app/demo-modules/demo-utils/module.ts"],"sourcesContent":["export function adapterFactory(moment) {\n    function addDays(date, amount) {\n        return moment(date).add(amount, 'days').toDate();\n    }\n    function addHours(date, amount) {\n        return moment(date).add(amount, 'hours').toDate();\n    }\n    function addMinutes(date, amount) {\n        return moment(date).add(amount, 'minutes').toDate();\n    }\n    function addSeconds(date, amount) {\n        return moment(date).add(amount, 'seconds').toDate();\n    }\n    function differenceInDays(dateLeft, dateRight) {\n        return moment(dateLeft).diff(moment(dateRight), 'days');\n    }\n    function differenceInMinutes(dateLeft, dateRight) {\n        return moment(dateLeft).diff(moment(dateRight), 'minutes');\n    }\n    function differenceInSeconds(dateLeft, dateRight) {\n        return moment(dateLeft).diff(moment(dateRight), 'seconds');\n    }\n    function endOfDay(date) {\n        return moment(date).endOf('day').toDate();\n    }\n    function endOfMonth(date) {\n        return moment(date).endOf('month').toDate();\n    }\n    function endOfWeek(date) {\n        return moment(date).endOf('week').toDate();\n    }\n    function getDay(date) {\n        return moment(date).day();\n    }\n    /* istanbul ignore next */\n    function getMonth(date) {\n        return moment(date).month();\n    }\n    function isSameDay(dateLeft, dateRight) {\n        return moment(dateLeft).isSame(moment(dateRight), 'day');\n    }\n    function isSameMonth(dateLeft, dateRight) {\n        return moment(dateLeft).isSame(moment(dateRight), 'month');\n    }\n    function isSameSecond(dateLeft, dateRight) {\n        return moment(dateLeft).isSame(moment(dateRight), 'second');\n    }\n    function max(dates) {\n        // tslint:disable-line array-type\n        return moment.max(dates.map(function (date) { return moment(date); })).toDate();\n    }\n    function setHours(date, hours) {\n        return moment(date).set('hours', hours).toDate();\n    }\n    function setMinutes(date, minutes) {\n        return moment(date).set('minutes', minutes).toDate();\n    }\n    function startOfDay(date) {\n        return moment(date).startOf('day').toDate();\n    }\n    function startOfMinute(date) {\n        return moment(date).startOf('minute').toDate();\n    }\n    function startOfMonth(date) {\n        return moment(date).startOf('month').toDate();\n    }\n    function startOfWeek(date) {\n        return moment(date).startOf('week').toDate();\n    }\n    function getHours(date) {\n        return moment(date).get('hours');\n    }\n    function getMinutes(date) {\n        return moment(date).get('minutes');\n    }\n    function getTimezoneOffset(date) {\n        return moment(date).utcOffset() * -1;\n    }\n    return {\n        addDays: addDays,\n        addHours: addHours,\n        addMinutes: addMinutes,\n        addSeconds: addSeconds,\n        differenceInDays: differenceInDays,\n        differenceInMinutes: differenceInMinutes,\n        differenceInSeconds: differenceInSeconds,\n        endOfDay: endOfDay,\n        endOfMonth: endOfMonth,\n        endOfWeek: endOfWeek,\n        getDay: getDay,\n        getMonth: getMonth,\n        isSameDay: isSameDay,\n        isSameMonth: isSameMonth,\n        isSameSecond: isSameSecond,\n        max: max,\n        setHours: setHours,\n        setMinutes: setMinutes,\n        startOfDay: startOfDay,\n        startOfMinute: startOfMinute,\n        startOfMonth: startOfMonth,\n        startOfWeek: startOfWeek,\n        getHours: getHours,\n        getMinutes: getMinutes,\n        getTimezoneOffset: getTimezoneOffset,\n    };\n}\n","import { adapterFactory as baseAdapterFactory } from 'calendar-utils/date-adapters/moment';\nimport { DateAdapter } from '../date-adapter';\n\nexport function adapterFactory(moment): DateAdapter {\n  return {\n    ...baseAdapterFactory(moment),\n\n    addWeeks(date: Date | number, amount: number): Date {\n      return moment(date).add(amount, 'weeks').toDate();\n    },\n\n    addMonths(date: Date | number, amount: number): Date {\n      return moment(date).add(amount, 'months').toDate();\n    },\n\n    subDays(date: Date | number, amount: number): Date {\n      return moment(date).subtract(amount, 'days').toDate();\n    },\n\n    subWeeks(date: Date | number, amount: number): Date {\n      return moment(date).subtract(amount, 'weeks').toDate();\n    },\n\n    subMonths(date: Date | number, amount: number): Date {\n      return moment(date).subtract(amount, 'months').toDate();\n    },\n\n    getISOWeek(date: Date | number): number {\n      return moment(date).isoWeek();\n    },\n\n    setDate(date: Date | number, dayOfMonth: number): Date {\n      return moment(date).date(dayOfMonth).toDate();\n    },\n\n    setMonth(date: Date | number, month: number): Date {\n      return moment(date).month(month).toDate();\n    },\n\n    setYear(date: Date | number, year: number): Date {\n      return moment(date).year(year).toDate();\n    },\n\n    getDate(date: Date | number): number {\n      return moment(date).date();\n    },\n\n    getYear(date: Date | number): number {\n      return moment(date).year();\n    },\n  };\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CalendarView } from 'angular-calendar';\n\n@Component({\n  selector: 'mwl-demo-utils-calendar-header',\n  template: `\n    <div class=\"row text-center\">\n      <div class=\"col-md-4\">\n        <div class=\"btn-group\">\n          <div\n            class=\"btn btn-primary\"\n            mwlCalendarPreviousView\n            [view]=\"view\"\n            [(viewDate)]=\"viewDate\"\n            (viewDateChange)=\"viewDateChange.next(viewDate)\"\n          >\n            Previous\n          </div>\n          <div\n            class=\"btn btn-outline-secondary\"\n            mwlCalendarToday\n            [(viewDate)]=\"viewDate\"\n            (viewDateChange)=\"viewDateChange.next(viewDate)\"\n          >\n            Today\n          </div>\n          <div\n            class=\"btn btn-primary\"\n            mwlCalendarNextView\n            [view]=\"view\"\n            [(viewDate)]=\"viewDate\"\n            (viewDateChange)=\"viewDateChange.next(viewDate)\"\n          >\n            Next\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-4\">\n        <h3>{{ viewDate | calendarDate: view + 'ViewTitle':locale }}</h3>\n      </div>\n      <div class=\"col-md-4\">\n        <div class=\"btn-group\">\n          <div\n            class=\"btn btn-primary\"\n            (click)=\"viewChange.emit(CalendarView.Month)\"\n            [class.active]=\"view === CalendarView.Month\"\n          >\n            Month\n          </div>\n          <div\n            class=\"btn btn-primary\"\n            (click)=\"viewChange.emit(CalendarView.Week)\"\n            [class.active]=\"view === CalendarView.Week\"\n          >\n            Week\n          </div>\n          <div\n            class=\"btn btn-primary\"\n            (click)=\"viewChange.emit(CalendarView.Day)\"\n            [class.active]=\"view === CalendarView.Day\"\n          >\n            Day\n          </div>\n        </div>\n      </div>\n    </div>\n    <br />\n  `,\n})\nexport class CalendarHeaderComponent {\n  @Input() view: CalendarView;\n\n  @Input() viewDate: Date;\n\n  @Input() locale: string = 'en';\n\n  @Output() viewChange = new EventEmitter<CalendarView>();\n\n  @Output() viewDateChange = new EventEmitter<Date>();\n\n  CalendarView = CalendarView;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { CalendarModule } from 'angular-calendar';\nimport { CalendarHeaderComponent } from './calendar-header.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, CalendarModule],\n  declarations: [CalendarHeaderComponent],\n  exports: [CalendarHeaderComponent],\n})\nexport class DemoUtilsModule {}\n"],"names":[],"sourceRoot":"webpack:///"}