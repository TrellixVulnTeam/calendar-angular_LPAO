{"version":3,"file":"projects_demos_app_demo-modules_public-holidays_module_ts-es2015.js","mappings":"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","sources":["./node_modules/date-fns/esm/addYears/index.js","./node_modules/date-fns/esm/startOfYear/index.js","./node_modules/date-fns/esm/subYears/index.js","./projects/demos/app/demo-modules/public-holidays/component.ts","./projects/demos/app/demo-modules/public-holidays/template.html","./projects/demos/app/demo-modules/public-holidays/module.ts"],"sourcesContent":["import toInteger from \"../_lib/toInteger/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addYears\n * @category Year Helpers\n * @summary Add the specified number of years to the given date.\n *\n * @description\n * Add the specified number of years to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the years added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 years to 1 September 2014:\n * const result = addYears(new Date(2014, 8, 1), 5)\n * //=> Sun Sep 01 2019 00:00:00\n */\n\nexport default function addYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, amount * 12);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\n\nexport default function startOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var cleanDate = toDate(dirtyDate);\n  var date = new Date(0);\n  date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addYears from \"../addYears/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subYears\n * @category Year Helpers\n * @summary Subtract the specified number of years from the given date.\n *\n * @description\n * Subtract the specified number of years from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the years subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 years from 1 September 2014:\n * const result = subYears(new Date(2014, 8, 1), 5)\n * //=> Tue Sep 01 2009 00:00:00\n */\n\nexport default function subYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addYears(dirtyDate, -amount);\n}","import {\n  Component,\n  ChangeDetectionStrategy,\n  OnInit,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { CalendarEvent, CalendarView } from 'angular-calendar';\nimport { HttpClient } from '@angular/common/http';\nimport { startOfYear, subYears } from 'date-fns';\n\n// get your own key from https://holidayapi.com/\nconst HOLIDAY_API_KEY = '8eb2582d-3a4c-4fc5-94c8-3e21487d4e23';\n\n// change this to your own country\nconst COUNTRY_CODE = 'US';\n\ninterface Holiday {\n  date: string;\n  name: string;\n}\n\ntype CalendarEventWithMeta = CalendarEvent<\n  { type: 'holiday'; holiday: Holiday } | { type: 'normal' }\n>;\n\n@Component({\n  selector: 'mwl-demo-component',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: 'template.html',\n})\nexport class DemoComponent implements OnInit {\n  view: CalendarView = CalendarView.Month;\n\n  viewDate = startOfYear(subYears(new Date(), 1));\n\n  events: CalendarEventWithMeta[] = [];\n\n  constructor(private http: HttpClient, private cdr: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this.fetchHolidays();\n  }\n\n  private fetchHolidays() {\n    this.http\n      .get<{ holidays: Holiday[] }>('https://holidayapi.com/v1/holidays', {\n        params: {\n          country: COUNTRY_CODE,\n          year: String(new Date().getFullYear() - 1),\n          key: HOLIDAY_API_KEY,\n        },\n      })\n      .subscribe(({ holidays }) => {\n        this.events = holidays.map((holiday) => {\n          return {\n            start: new Date(holiday.date),\n            title: holiday.name,\n            allDay: true,\n            meta: {\n              type: 'holiday',\n              holiday,\n            },\n          };\n        });\n        this.cdr.markForCheck();\n      });\n  }\n}\n","<mwl-demo-utils-calendar-header [(view)]=\"view\" [(viewDate)]=\"viewDate\">\n</mwl-demo-utils-calendar-header>\n\n<div [ngSwitch]=\"view\">\n  <mwl-calendar-month-view\n    *ngSwitchCase=\"'month'\"\n    [viewDate]=\"viewDate\"\n    [events]=\"events\"\n  >\n  </mwl-calendar-month-view>\n  <mwl-calendar-week-view\n    *ngSwitchCase=\"'week'\"\n    [viewDate]=\"viewDate\"\n    [events]=\"events\"\n  >\n  </mwl-calendar-week-view>\n  <mwl-calendar-day-view\n    *ngSwitchCase=\"'day'\"\n    [viewDate]=\"viewDate\"\n    [events]=\"events\"\n  >\n  </mwl-calendar-day-view>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\nimport { DemoUtilsModule } from '../demo-utils/module';\nimport { DemoComponent } from './component';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CalendarModule.forRoot({\n      provide: DateAdapter,\n      useFactory: adapterFactory,\n    }),\n    HttpClientModule,\n    DemoUtilsModule,\n    RouterModule.forChild([{ path: '', component: DemoComponent }]),\n  ],\n  declarations: [DemoComponent],\n  exports: [DemoComponent],\n})\nexport class DemoModule {}\n"],"names":[],"sourceRoot":"webpack:///"}