{"version":3,"mappings":"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","names":["LayoutModule","_angular_core__WEBPACK_IMPORTED_MODULE_0__","type","args","MediaMatcher","window","noopMatchMedia","createEmptyStyleRule","_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_1__","factory","token","providedIn","mediaQueryStyleNode","document","insertRule","query","mediaQueriesForWebkitCompatibility","console","matches","media","addListener","removeListener","BreakpointObserver","rxjs__WEBPACK_IMPORTED_MODULE_2__","value","observables","stateObservable","breakpoints","breakpointStates","response","rxjs__WEBPACK_IMPORTED_MODULE_10__","mql","pipe","observable","reduce","map","XSmall","Small","Medium","Large","XLarge","Handset","Tablet","Web","HandsetPortrait","TabletPortrait","WebPortrait","HandsetLandscape","TabletLandscape","WebLandscape","DemoComponent","breakpointObserver","cd","angular_calendar__WEBPACK_IMPORTED_MODULE_0__","Date","rxjs__WEBPACK_IMPORTED_MODULE_1__","CALENDAR_RESPONSIVE","small","breakpoint","daysInWeek","medium","large","observe","Object","values","destroy$","subscribe","state","foundBreakpoint","find","markForCheck","next","_angular_core__WEBPACK_IMPORTED_MODULE_3__","selectors","decls","vars","consts","template","ctx","DemoModule","_angular_common__WEBPACK_IMPORTED_MODULE_1__","angular_calendar__WEBPACK_IMPORTED_MODULE_2__","provide","angular_calendar__WEBPACK_IMPORTED_MODULE_3__","useFactory","angular_calendar_date_adapters_date_fns__WEBPACK_IMPORTED_MODULE_4__","_angular_router__WEBPACK_IMPORTED_MODULE_5__","path","component","_component__WEBPACK_IMPORTED_MODULE_6__","declarations","imports","exports"],"sources":["webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/layout.js","webpack:///projects/demos/app/demo-modules/responsive-week-view/component.ts","webpack:///projects/demos/app/demo-modules/responsive-week-view/template.html","webpack:///projects/demos/app/demo-modules/responsive-week-view/module.ts"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { NgModule, Injectable, NgZone } from '@angular/core';\nimport { coerceArray } from '@angular/cdk/coercion';\nimport { Subject, combineLatest, concat, Observable } from 'rxjs';\nimport { take, skip, debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/platform';\nimport { Platform } from '@angular/cdk/platform';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nclass LayoutModule {\n}\nLayoutModule.ɵfac = function LayoutModule_Factory(t) { return new (t || LayoutModule)(); };\nLayoutModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: LayoutModule });\nLayoutModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LayoutModule, [{\n        type: NgModule,\n        args: [{}]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Global registry for all dynamically-created, injected media queries. */\nconst mediaQueriesForWebkitCompatibility = new Set();\n/** Style tag that holds all of the dynamically-created media queries. */\nlet mediaQueryStyleNode;\n/** A utility for calling matchMedia queries. */\nclass MediaMatcher {\n    constructor(_platform) {\n        this._platform = _platform;\n        this._matchMedia = this._platform.isBrowser && window.matchMedia ?\n            // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n            // call it from a different scope.\n            window.matchMedia.bind(window) :\n            noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     */\n    matchMedia(query) {\n        if (this._platform.WEBKIT) {\n            createEmptyStyleRule(query);\n        }\n        return this._matchMedia(query);\n    }\n}\nMediaMatcher.ɵfac = function MediaMatcher_Factory(t) { return new (t || MediaMatcher)(ɵngcc0.ɵɵinject(ɵngcc1.Platform)); };\nMediaMatcher.ɵprov = i0.ɵɵdefineInjectable({ factory: function MediaMatcher_Factory() { return new MediaMatcher(i0.ɵɵinject(i1.Platform)); }, token: MediaMatcher, providedIn: \"root\" });\nMediaMatcher.ctorParameters = () => [\n    { type: Platform }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MediaMatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }]; }, null); })();\n/**\n * For Webkit engines that only trigger the MediaQueryListListener when\n * there is at least one CSS selector for the respective media query.\n */\nfunction createEmptyStyleRule(query) {\n    if (mediaQueriesForWebkitCompatibility.has(query)) {\n        return;\n    }\n    try {\n        if (!mediaQueryStyleNode) {\n            mediaQueryStyleNode = document.createElement('style');\n            mediaQueryStyleNode.setAttribute('type', 'text/css');\n            document.head.appendChild(mediaQueryStyleNode);\n        }\n        if (mediaQueryStyleNode.sheet) {\n            mediaQueryStyleNode.sheet\n                .insertRule(`@media ${query} {.fx-query-test{ }}`, 0);\n            mediaQueriesForWebkitCompatibility.add(query);\n        }\n    }\n    catch (e) {\n        console.error(e);\n    }\n}\n/** No-op matchMedia replacement for non-browser platforms. */\nfunction noopMatchMedia(query) {\n    // Use `as any` here to avoid adding additional necessary properties for\n    // the noop matcher.\n    return {\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: () => { },\n        removeListener: () => { }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Utility for checking the matching state of @media queries. */\nclass BreakpointObserver {\n    constructor(_mediaMatcher, _zone) {\n        this._mediaMatcher = _mediaMatcher;\n        this._zone = _zone;\n        /**  A map of all media queries currently being listened for. */\n        this._queries = new Map();\n        /** A subject for all other observables to takeUntil based on. */\n        this._destroySubject = new Subject();\n    }\n    /** Completes the active subject, signalling to all other observables to complete. */\n    ngOnDestroy() {\n        this._destroySubject.next();\n        this._destroySubject.complete();\n    }\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param value One or more media queries to check.\n     * @returns Whether any of the media queries match.\n     */\n    isMatched(value) {\n        const queries = splitQueries(coerceArray(value));\n        return queries.some(mediaQuery => this._registerQuery(mediaQuery).mql.matches);\n    }\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param value One or more media queries to check.\n     * @returns A stream of matches for the given queries.\n     */\n    observe(value) {\n        const queries = splitQueries(coerceArray(value));\n        const observables = queries.map(query => this._registerQuery(query).observable);\n        let stateObservable = combineLatest(observables);\n        // Emit the first state immediately, and then debounce the subsequent emissions.\n        stateObservable = concat(stateObservable.pipe(take(1)), stateObservable.pipe(skip(1), debounceTime(0)));\n        return stateObservable.pipe(map(breakpointStates => {\n            const response = {\n                matches: false,\n                breakpoints: {},\n            };\n            breakpointStates.forEach(({ matches, query }) => {\n                response.matches = response.matches || matches;\n                response.breakpoints[query] = matches;\n            });\n            return response;\n        }));\n    }\n    /** Registers a specific query to be listened for. */\n    _registerQuery(query) {\n        // Only set up a new MediaQueryList if it is not already being listened for.\n        if (this._queries.has(query)) {\n            return this._queries.get(query);\n        }\n        const mql = this._mediaMatcher.matchMedia(query);\n        // Create callback for match changes and add it is as a listener.\n        const queryObservable = new Observable((observer) => {\n            // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n            // back into the zone because matchMedia is only included in Zone.js by loading the\n            // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n            // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n            // patches it.\n            const handler = (e) => this._zone.run(() => observer.next(e));\n            mql.addListener(handler);\n            return () => {\n                mql.removeListener(handler);\n            };\n        }).pipe(startWith(mql), map(({ matches }) => ({ query, matches })), takeUntil(this._destroySubject));\n        // Add the MediaQueryList to the set of queries.\n        const output = { observable: queryObservable, mql };\n        this._queries.set(query, output);\n        return output;\n    }\n}\nBreakpointObserver.ɵfac = function BreakpointObserver_Factory(t) { return new (t || BreakpointObserver)(ɵngcc0.ɵɵinject(MediaMatcher), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nBreakpointObserver.ɵprov = i0.ɵɵdefineInjectable({ factory: function BreakpointObserver_Factory() { return new BreakpointObserver(i0.ɵɵinject(MediaMatcher), i0.ɵɵinject(i0.NgZone)); }, token: BreakpointObserver, providedIn: \"root\" });\nBreakpointObserver.ctorParameters = () => [\n    { type: MediaMatcher },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BreakpointObserver, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: MediaMatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries) {\n    return queries.map(query => query.split(','))\n        .reduce((a1, a2) => a1.concat(a2))\n        .map(query => query.trim());\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\nconst Breakpoints = {\n    XSmall: '(max-width: 599.98px)',\n    Small: '(min-width: 600px) and (max-width: 959.98px)',\n    Medium: '(min-width: 960px) and (max-width: 1279.98px)',\n    Large: '(min-width: 1280px) and (max-width: 1919.98px)',\n    XLarge: '(min-width: 1920px)',\n    Handset: '(max-width: 599.98px) and (orientation: portrait), ' +\n        '(max-width: 959.98px) and (orientation: landscape)',\n    Tablet: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait), ' +\n        '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n    Web: '(min-width: 840px) and (orientation: portrait), ' +\n        '(min-width: 1280px) and (orientation: landscape)',\n    HandsetPortrait: '(max-width: 599.98px) and (orientation: portrait)',\n    TabletPortrait: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait)',\n    WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n    HandsetLandscape: '(max-width: 959.98px) and (orientation: landscape)',\n    TabletLandscape: '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n    WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BreakpointObserver, Breakpoints, LayoutModule, MediaMatcher };\n\n","import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  OnDestroy,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { BreakpointObserver, BreakpointState } from '@angular/cdk/layout';\nimport { CalendarView } from 'angular-calendar';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'mwl-demo-component',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: './template.html',\n})\nexport class DemoComponent implements OnInit, OnDestroy {\n  view: CalendarView = CalendarView.Week;\n\n  viewDate = new Date();\n\n  daysInWeek = 7;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private cd: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    const CALENDAR_RESPONSIVE = {\n      small: {\n        breakpoint: '(max-width: 576px)',\n        daysInWeek: 2,\n      },\n      medium: {\n        breakpoint: '(max-width: 768px)',\n        daysInWeek: 3,\n      },\n      large: {\n        breakpoint: '(max-width: 960px)',\n        daysInWeek: 5,\n      },\n    };\n\n    this.breakpointObserver\n      .observe(\n        Object.values(CALENDAR_RESPONSIVE).map(({ breakpoint }) => breakpoint)\n      )\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((state: BreakpointState) => {\n        const foundBreakpoint = Object.values(CALENDAR_RESPONSIVE).find(\n          ({ breakpoint }) => !!state.breakpoints[breakpoint]\n        );\n        if (foundBreakpoint) {\n          this.daysInWeek = foundBreakpoint.daysInWeek;\n        } else {\n          this.daysInWeek = 7;\n        }\n        this.cd.markForCheck();\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n  }\n}\n","<div class=\"alert alert-info\">\n  Shrink the browser window size to reduce the number of days in the week.\n</div>\n\n<mwl-calendar-week-view [viewDate]=\"viewDate\" [daysInWeek]=\"daysInWeek\">\n</mwl-calendar-week-view>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\nimport { DemoComponent } from './component';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CalendarModule.forRoot({\n      provide: DateAdapter,\n      useFactory: adapterFactory,\n    }),\n    RouterModule.forChild([{ path: '', component: DemoComponent }]),\n  ],\n  declarations: [DemoComponent],\n  exports: [DemoComponent],\n})\nexport class DemoModule {}\n"]}