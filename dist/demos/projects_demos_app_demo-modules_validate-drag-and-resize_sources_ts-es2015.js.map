{"version":3,"file":"projects_demos_app_demo-modules_validate-drag-and-resize_sources_ts-es2015.js","mappings":"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","sources":["./projects/demos/app/demo-modules/validate-drag-and-resize/sources.ts","webpack:///./projects/demos/app/demo-modules/validate-drag-and-resize/component.ts?63cf","webpack:///./projects/demos/app/demo-modules/validate-drag-and-resize/module.ts?8075","webpack:///./projects/demos/app/demo-modules/validate-drag-and-resize/template.html?984b","webpack:///./projects/demos/app/demo-modules/validate-drag-and-resize/component.ts?87d2","webpack:///./projects/demos/app/demo-modules/validate-drag-and-resize/module.ts?df18","webpack:///./projects/demos/app/demo-modules/validate-drag-and-resize/template.html?4dfb"],"sourcesContent":["export const sources = [\n  {\n    filename: 'component.ts',\n    contents: {\n      raw: require('!!raw-loader!./component'),\n      highlighted: require('!!raw-loader!highlightjs-loader?lang=typescript!./component'),\n    },\n  },\n  {\n    filename: 'template.html',\n    contents: {\n      raw: require('!!raw-loader!./template.html'),\n      highlighted: require('!!raw-loader!highlightjs-loader?lang=xml!./template.html'),\n    },\n  },\n  {\n    filename: 'module.ts',\n    contents: {\n      raw: require('!!raw-loader!./module'),\n      highlighted: require('!!raw-loader!highlightjs-loader?lang=typescript!./module'),\n    },\n  },\n];\n","export default \"<span class=\\\"hljs-keyword\\\">import</span> {\\n  ChangeDetectionStrategy,\\n  Component,\\n  ViewEncapsulation,\\n} from <span class=\\\"hljs-string\\\">'@angular/core'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { Subject } from <span class=\\\"hljs-string\\\">'rxjs'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> {\\n  CalendarEvent,\\n  CalendarEventTimesChangedEvent,\\n  CalendarView,\\n} from <span class=\\\"hljs-string\\\">'angular-calendar'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { colors } from <span class=\\\"hljs-string\\\">'../demo-utils/colors'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> {\\n  addDays,\\n  addHours,\\n  isSameDay,\\n  setDay,\\n  startOfDay,\\n  subDays,\\n  subSeconds,\\n} from <span class=\\\"hljs-string\\\">'date-fns'</span>;\\n\\n@Component({\\n  selector: <span class=\\\"hljs-string\\\">'mwl-demo-component'</span>,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  templateUrl: <span class=\\\"hljs-string\\\">'template.html'</span>,\\n  styles: [\\n    `\\n      .invalid-position .cal-event {\\n        background-color: #ad2121 !important;\\n        color: #fff;\\n      }\\n    `,\\n  ],\\n  encapsulation: ViewEncapsulation.None,\\n})\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">class</span> DemoComponent {\\n  view: CalendarView = CalendarView.Week;\\n\\n  viewDate: <span class=\\\"hljs-built_in\\\">Date</span> = <span class=\\\"hljs-keyword\\\">new</span> <span class=\\\"hljs-built_in\\\">Date</span>();\\n\\n  events: CalendarEvent[] = [\\n    {\\n      start: subDays(startOfDay(<span class=\\\"hljs-keyword\\\">new</span> <span class=\\\"hljs-built_in\\\">Date</span>()), <span class=\\\"hljs-number\\\">1</span>),\\n      end: addDays(<span class=\\\"hljs-keyword\\\">new</span> <span class=\\\"hljs-built_in\\\">Date</span>(), <span class=\\\"hljs-number\\\">1</span>),\\n      title: <span class=\\\"hljs-string\\\">'A 3 day event'</span>,\\n      color: colors.blue,\\n      allDay: <span class=\\\"hljs-literal\\\">true</span>,\\n      resizable: {\\n        beforeStart: <span class=\\\"hljs-literal\\\">true</span>,\\n        afterEnd: <span class=\\\"hljs-literal\\\">true</span>,\\n      },\\n      draggable: <span class=\\\"hljs-literal\\\">true</span>,\\n    },\\n    {\\n      start: addHours(startOfDay(setDay(<span class=\\\"hljs-keyword\\\">new</span> <span class=\\\"hljs-built_in\\\">Date</span>(), <span class=\\\"hljs-number\\\">3</span>)), <span class=\\\"hljs-number\\\">2</span>),\\n      end: subSeconds(addHours(startOfDay(setDay(<span class=\\\"hljs-keyword\\\">new</span> <span class=\\\"hljs-built_in\\\">Date</span>(), <span class=\\\"hljs-number\\\">3</span>)), <span class=\\\"hljs-number\\\">3</span>), <span class=\\\"hljs-number\\\">1</span>),\\n      title: <span class=\\\"hljs-string\\\">'An short event'</span>,\\n      color: colors.yellow,\\n      resizable: {\\n        beforeStart: <span class=\\\"hljs-literal\\\">true</span>,\\n        afterEnd: <span class=\\\"hljs-literal\\\">true</span>,\\n      },\\n      draggable: <span class=\\\"hljs-literal\\\">true</span>,\\n    },\\n    {\\n      start: addHours(startOfDay(setDay(<span class=\\\"hljs-keyword\\\">new</span> <span class=\\\"hljs-built_in\\\">Date</span>(), <span class=\\\"hljs-number\\\">3</span>)), <span class=\\\"hljs-number\\\">5</span>),\\n      end: subSeconds(addHours(startOfDay(setDay(<span class=\\\"hljs-keyword\\\">new</span> <span class=\\\"hljs-built_in\\\">Date</span>(), <span class=\\\"hljs-number\\\">3</span>)), <span class=\\\"hljs-number\\\">10</span>), <span class=\\\"hljs-number\\\">1</span>),\\n      title: <span class=\\\"hljs-string\\\">'A draggable and resizable event'</span>,\\n      color: colors.yellow,\\n      resizable: {\\n        beforeStart: <span class=\\\"hljs-literal\\\">true</span>,\\n        afterEnd: <span class=\\\"hljs-literal\\\">true</span>,\\n      },\\n      draggable: <span class=\\\"hljs-literal\\\">true</span>,\\n    },\\n  ];\\n\\n  refresh = <span class=\\\"hljs-keyword\\\">new</span> Subject&lt;<span class=\\\"hljs-built_in\\\">void</span>&gt;();\\n\\n  validateEventTimesChanged = (\\n    { event, newStart, newEnd, allDay }: CalendarEventTimesChangedEvent,\\n    addCssClass = <span class=\\\"hljs-literal\\\">true</span>\\n  ) =&gt; {\\n    <span class=\\\"hljs-keyword\\\">if</span> (event.allDay) {\\n      <span class=\\\"hljs-keyword\\\">return</span> <span class=\\\"hljs-literal\\\">true</span>;\\n    }\\n\\n    <span class=\\\"hljs-keyword\\\">delete</span> event.cssClass;\\n    <span class=\\\"hljs-comment\\\">// don't allow dragging or resizing events to different days</span>\\n    <span class=\\\"hljs-keyword\\\">const</span> sameDay = isSameDay(newStart, newEnd);\\n\\n    <span class=\\\"hljs-keyword\\\">if</span> (!sameDay) {\\n      <span class=\\\"hljs-keyword\\\">return</span> <span class=\\\"hljs-literal\\\">false</span>;\\n    }\\n\\n    <span class=\\\"hljs-comment\\\">// don't allow dragging events to the same times as other events</span>\\n    <span class=\\\"hljs-keyword\\\">const</span> overlappingEvent = <span class=\\\"hljs-keyword\\\">this</span>.events.find((otherEvent) =&gt; {\\n      <span class=\\\"hljs-keyword\\\">return</span> (\\n        otherEvent !== event &amp;&amp;\\n        !otherEvent.allDay &amp;&amp;\\n        ((otherEvent.start &lt; newStart &amp;&amp; newStart &lt; otherEvent.end) ||\\n          (otherEvent.start &lt; newEnd &amp;&amp; newStart &lt; otherEvent.end))\\n      );\\n    });\\n\\n    <span class=\\\"hljs-keyword\\\">if</span> (overlappingEvent) {\\n      <span class=\\\"hljs-keyword\\\">if</span> (addCssClass) {\\n        event.cssClass = <span class=\\\"hljs-string\\\">'invalid-position'</span>;\\n      } <span class=\\\"hljs-keyword\\\">else</span> {\\n        <span class=\\\"hljs-keyword\\\">return</span> <span class=\\\"hljs-literal\\\">false</span>;\\n      }\\n    }\\n\\n    <span class=\\\"hljs-keyword\\\">return</span> <span class=\\\"hljs-literal\\\">true</span>;\\n  };\\n\\n  eventTimesChanged(\\n    eventTimesChangedEvent: CalendarEventTimesChangedEvent\\n  ): <span class=\\\"hljs-built_in\\\">void</span> {\\n    <span class=\\\"hljs-keyword\\\">delete</span> eventTimesChangedEvent.event.cssClass;\\n    <span class=\\\"hljs-keyword\\\">if</span> (<span class=\\\"hljs-keyword\\\">this</span>.validateEventTimesChanged(eventTimesChangedEvent, <span class=\\\"hljs-literal\\\">false</span>)) {\\n      <span class=\\\"hljs-keyword\\\">const</span> { event, newStart, newEnd } = eventTimesChangedEvent;\\n      event.start = newStart;\\n      event.end = newEnd;\\n      <span class=\\\"hljs-keyword\\\">this</span>.refresh.next();\\n    }\\n  }\\n}\\n\";","export default \"<span class=\\\"hljs-keyword\\\">import</span> { NgModule } from <span class=\\\"hljs-string\\\">'@angular/core'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { CommonModule } from <span class=\\\"hljs-string\\\">'@angular/common'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { RouterModule } from <span class=\\\"hljs-string\\\">'@angular/router'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { CalendarModule, DateAdapter } from <span class=\\\"hljs-string\\\">'angular-calendar'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { DemoUtilsModule } from <span class=\\\"hljs-string\\\">'../demo-utils/module'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { DemoComponent } from <span class=\\\"hljs-string\\\">'./component'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { adapterFactory } from <span class=\\\"hljs-string\\\">'angular-calendar/date-adapters/date-fns'</span>;\\n\\n@NgModule({\\n  imports: [\\n    CommonModule,\\n    CalendarModule.forRoot({\\n      provide: DateAdapter,\\n      useFactory: adapterFactory,\\n    }),\\n    DemoUtilsModule,\\n    RouterModule.forChild([{ path: <span class=\\\"hljs-string\\\">''</span>, component: DemoComponent }]),\\n  ],\\n  declarations: [DemoComponent],\\n  exports: [DemoComponent],\\n})\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">class</span> DemoModule {}\\n\";","export default \"<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-title\\\">mwl-demo-utils-calendar-header</span> [(<span class=\\\"hljs-attribute\\\">view</span>)]=<span class=\\\"hljs-value\\\">\\\"view\\\"</span> [(<span class=\\\"hljs-attribute\\\">viewDate</span>)]=<span class=\\\"hljs-value\\\">\\\"viewDate\\\"</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-title\\\">mwl-demo-utils-calendar-header</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-title\\\">div</span> [<span class=\\\"hljs-attribute\\\">ngSwitch</span>]=<span class=\\\"hljs-value\\\">\\\"view\\\"</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-title\\\">mwl-calendar-month-view</span>\\n    *<span class=\\\"hljs-attribute\\\">ngSwitchCase</span>=<span class=\\\"hljs-value\\\">\\\"'month'\\\"</span>\\n    [<span class=\\\"hljs-attribute\\\">viewDate</span>]=<span class=\\\"hljs-value\\\">\\\"viewDate\\\"</span>\\n    [<span class=\\\"hljs-attribute\\\">events</span>]=<span class=\\\"hljs-value\\\">\\\"events\\\"</span>\\n    [<span class=\\\"hljs-attribute\\\">activeDayIsOpen</span>]=<span class=\\\"hljs-value\\\">\\\"true\\\"</span>\\n    [<span class=\\\"hljs-attribute\\\">refresh</span>]=<span class=\\\"hljs-value\\\">\\\"refresh\\\"</span>\\n    (<span class=\\\"hljs-attribute\\\">eventTimesChanged</span>)=<span class=\\\"hljs-value\\\">\\\"eventTimesChanged($event)\\\"</span>\\n  &gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-title\\\">mwl-calendar-month-view</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-title\\\">mwl-calendar-week-view</span>\\n    *<span class=\\\"hljs-attribute\\\">ngSwitchCase</span>=<span class=\\\"hljs-value\\\">\\\"'week'\\\"</span>\\n    [<span class=\\\"hljs-attribute\\\">viewDate</span>]=<span class=\\\"hljs-value\\\">\\\"viewDate\\\"</span>\\n    [<span class=\\\"hljs-attribute\\\">events</span>]=<span class=\\\"hljs-value\\\">\\\"events\\\"</span>\\n    [<span class=\\\"hljs-attribute\\\">refresh</span>]=<span class=\\\"hljs-value\\\">\\\"refresh\\\"</span>\\n    [<span class=\\\"hljs-attribute\\\">validateEventTimesChanged</span>]=<span class=\\\"hljs-value\\\">\\\"validateEventTimesChanged\\\"</span>\\n    (<span class=\\\"hljs-attribute\\\">eventTimesChanged</span>)=<span class=\\\"hljs-value\\\">\\\"eventTimesChanged($event)\\\"</span>\\n  &gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-title\\\">mwl-calendar-week-view</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-title\\\">mwl-calendar-day-view</span>\\n    *<span class=\\\"hljs-attribute\\\">ngSwitchCase</span>=<span class=\\\"hljs-value\\\">\\\"'day'\\\"</span>\\n    [<span class=\\\"hljs-attribute\\\">viewDate</span>]=<span class=\\\"hljs-value\\\">\\\"viewDate\\\"</span>\\n    [<span class=\\\"hljs-attribute\\\">events</span>]=<span class=\\\"hljs-value\\\">\\\"events\\\"</span>\\n    [<span class=\\\"hljs-attribute\\\">refresh</span>]=<span class=\\\"hljs-value\\\">\\\"refresh\\\"</span>\\n    [<span class=\\\"hljs-attribute\\\">validateEventTimesChanged</span>]=<span class=\\\"hljs-value\\\">\\\"validateEventTimesChanged\\\"</span>\\n    (<span class=\\\"hljs-attribute\\\">eventTimesChanged</span>)=<span class=\\\"hljs-value\\\">\\\"eventTimesChanged($event)\\\"</span>\\n  &gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-title\\\">mwl-calendar-day-view</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-title\\\">div</span>&gt;</span>\\n\";","export default \"import {\\n  ChangeDetectionStrategy,\\n  Component,\\n  ViewEncapsulation,\\n} from '@angular/core';\\nimport { Subject } from 'rxjs';\\nimport {\\n  CalendarEvent,\\n  CalendarEventTimesChangedEvent,\\n  CalendarView,\\n} from 'angular-calendar';\\nimport { colors } from '../demo-utils/colors';\\nimport {\\n  addDays,\\n  addHours,\\n  isSameDay,\\n  setDay,\\n  startOfDay,\\n  subDays,\\n  subSeconds,\\n} from 'date-fns';\\n\\n@Component({\\n  selector: 'mwl-demo-component',\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  templateUrl: 'template.html',\\n  styles: [\\n    `\\n      .invalid-position .cal-event {\\n        background-color: #ad2121 !important;\\n        color: #fff;\\n      }\\n    `,\\n  ],\\n  encapsulation: ViewEncapsulation.None,\\n})\\nexport class DemoComponent {\\n  view: CalendarView = CalendarView.Week;\\n\\n  viewDate: Date = new Date();\\n\\n  events: CalendarEvent[] = [\\n    {\\n      start: subDays(startOfDay(new Date()), 1),\\n      end: addDays(new Date(), 1),\\n      title: 'A 3 day event',\\n      color: colors.blue,\\n      allDay: true,\\n      resizable: {\\n        beforeStart: true,\\n        afterEnd: true,\\n      },\\n      draggable: true,\\n    },\\n    {\\n      start: addHours(startOfDay(setDay(new Date(), 3)), 2),\\n      end: subSeconds(addHours(startOfDay(setDay(new Date(), 3)), 3), 1),\\n      title: 'An short event',\\n      color: colors.yellow,\\n      resizable: {\\n        beforeStart: true,\\n        afterEnd: true,\\n      },\\n      draggable: true,\\n    },\\n    {\\n      start: addHours(startOfDay(setDay(new Date(), 3)), 5),\\n      end: subSeconds(addHours(startOfDay(setDay(new Date(), 3)), 10), 1),\\n      title: 'A draggable and resizable event',\\n      color: colors.yellow,\\n      resizable: {\\n        beforeStart: true,\\n        afterEnd: true,\\n      },\\n      draggable: true,\\n    },\\n  ];\\n\\n  refresh = new Subject<void>();\\n\\n  validateEventTimesChanged = (\\n    { event, newStart, newEnd, allDay }: CalendarEventTimesChangedEvent,\\n    addCssClass = true\\n  ) => {\\n    if (event.allDay) {\\n      return true;\\n    }\\n\\n    delete event.cssClass;\\n    // don't allow dragging or resizing events to different days\\n    const sameDay = isSameDay(newStart, newEnd);\\n\\n    if (!sameDay) {\\n      return false;\\n    }\\n\\n    // don't allow dragging events to the same times as other events\\n    const overlappingEvent = this.events.find((otherEvent) => {\\n      return (\\n        otherEvent !== event &&\\n        !otherEvent.allDay &&\\n        ((otherEvent.start < newStart && newStart < otherEvent.end) ||\\n          (otherEvent.start < newEnd && newStart < otherEvent.end))\\n      );\\n    });\\n\\n    if (overlappingEvent) {\\n      if (addCssClass) {\\n        event.cssClass = 'invalid-position';\\n      } else {\\n        return false;\\n      }\\n    }\\n\\n    return true;\\n  };\\n\\n  eventTimesChanged(\\n    eventTimesChangedEvent: CalendarEventTimesChangedEvent\\n  ): void {\\n    delete eventTimesChangedEvent.event.cssClass;\\n    if (this.validateEventTimesChanged(eventTimesChangedEvent, false)) {\\n      const { event, newStart, newEnd } = eventTimesChangedEvent;\\n      event.start = newStart;\\n      event.end = newEnd;\\n      this.refresh.next();\\n    }\\n  }\\n}\\n\";","export default \"import { NgModule } from '@angular/core';\\nimport { CommonModule } from '@angular/common';\\nimport { RouterModule } from '@angular/router';\\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\\nimport { DemoUtilsModule } from '../demo-utils/module';\\nimport { DemoComponent } from './component';\\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\\n\\n@NgModule({\\n  imports: [\\n    CommonModule,\\n    CalendarModule.forRoot({\\n      provide: DateAdapter,\\n      useFactory: adapterFactory,\\n    }),\\n    DemoUtilsModule,\\n    RouterModule.forChild([{ path: '', component: DemoComponent }]),\\n  ],\\n  declarations: [DemoComponent],\\n  exports: [DemoComponent],\\n})\\nexport class DemoModule {}\\n\";","export default \"<mwl-demo-utils-calendar-header [(view)]=\\\"view\\\" [(viewDate)]=\\\"viewDate\\\">\\n</mwl-demo-utils-calendar-header>\\n\\n<div [ngSwitch]=\\\"view\\\">\\n  <mwl-calendar-month-view\\n    *ngSwitchCase=\\\"'month'\\\"\\n    [viewDate]=\\\"viewDate\\\"\\n    [events]=\\\"events\\\"\\n    [activeDayIsOpen]=\\\"true\\\"\\n    [refresh]=\\\"refresh\\\"\\n    (eventTimesChanged)=\\\"eventTimesChanged($event)\\\"\\n  >\\n  </mwl-calendar-month-view>\\n  <mwl-calendar-week-view\\n    *ngSwitchCase=\\\"'week'\\\"\\n    [viewDate]=\\\"viewDate\\\"\\n    [events]=\\\"events\\\"\\n    [refresh]=\\\"refresh\\\"\\n    [validateEventTimesChanged]=\\\"validateEventTimesChanged\\\"\\n    (eventTimesChanged)=\\\"eventTimesChanged($event)\\\"\\n  >\\n  </mwl-calendar-week-view>\\n  <mwl-calendar-day-view\\n    *ngSwitchCase=\\\"'day'\\\"\\n    [viewDate]=\\\"viewDate\\\"\\n    [events]=\\\"events\\\"\\n    [refresh]=\\\"refresh\\\"\\n    [validateEventTimesChanged]=\\\"validateEventTimesChanged\\\"\\n    (eventTimesChanged)=\\\"eventTimesChanged($event)\\\"\\n  >\\n  </mwl-calendar-day-view>\\n</div>\\n\";"],"names":[],"sourceRoot":"webpack:///"}