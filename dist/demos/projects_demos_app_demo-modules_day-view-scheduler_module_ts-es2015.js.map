{"version":3,"file":"projects_demos_app_demo-modules_day-view-scheduler_module_ts-es2015.js","mappings":"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","sources":["./projects/demos/app/demo-modules/day-view-scheduler/component.ts","./projects/demos/app/demo-modules/day-view-scheduler/template.html","./projects/demos/app/demo-modules/day-view-scheduler/day-view-scheduler.component.ts","./projects/demos/app/demo-modules/day-view-scheduler/day-view-scheduler.component.html","./projects/demos/app/demo-modules/day-view-scheduler/module.ts","./projects/demos/app/demo-modules/demo-utils/calendar-header.component.ts","./projects/demos/app/demo-modules/demo-utils/module.ts"],"sourcesContent":["import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport {\n  CalendarEvent,\n  CalendarEventTimesChangedEvent,\n} from 'angular-calendar';\nimport { colors } from '../demo-utils/colors';\nimport { addHours, startOfDay } from 'date-fns';\nimport { User } from './day-view-scheduler.component';\n\nconst users: User[] = [\n  {\n    id: 0,\n    name: 'John smith',\n    color: colors.yellow,\n  },\n  {\n    id: 1,\n    name: 'Jane Doe',\n    color: colors.blue,\n  },\n];\n\n@Component({\n  selector: 'mwl-demo-component',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: 'template.html',\n})\nexport class DemoComponent {\n  viewDate = new Date();\n\n  users = users;\n\n  events: CalendarEvent[] = [\n    {\n      title: 'An event',\n      color: users[0].color,\n      start: addHours(startOfDay(new Date()), 5),\n      meta: {\n        user: users[0],\n      },\n      resizable: {\n        beforeStart: true,\n        afterEnd: true,\n      },\n      draggable: true,\n    },\n    {\n      title: 'Another event',\n      color: users[1].color,\n      start: addHours(startOfDay(new Date()), 2),\n      meta: {\n        user: users[1],\n      },\n      resizable: {\n        beforeStart: true,\n        afterEnd: true,\n      },\n      draggable: true,\n    },\n    {\n      title: 'A 3rd event',\n      color: users[0].color,\n      start: addHours(startOfDay(new Date()), 7),\n      meta: {\n        user: users[0],\n      },\n      resizable: {\n        beforeStart: true,\n        afterEnd: true,\n      },\n      draggable: true,\n    },\n    {\n      title: 'An all day event',\n      color: users[0].color,\n      start: new Date(),\n      meta: {\n        user: users[0],\n      },\n      draggable: true,\n      allDay: true,\n    },\n    {\n      title: 'Another all day event',\n      color: users[1].color,\n      start: new Date(),\n      meta: {\n        user: users[1],\n      },\n      draggable: true,\n      allDay: true,\n    },\n    {\n      title: 'A 3rd all day event',\n      color: users[0].color,\n      start: new Date(),\n      meta: {\n        user: users[0],\n      },\n      draggable: true,\n      allDay: true,\n    },\n  ];\n\n  eventTimesChanged({\n    event,\n    newStart,\n    newEnd,\n  }: CalendarEventTimesChangedEvent): void {\n    event.start = newStart;\n    event.end = newEnd;\n    this.events = [...this.events];\n  }\n\n  userChanged({ event, newUser }) {\n    event.color = newUser.color;\n    event.meta.user = newUser;\n    this.events = [...this.events];\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-6\">\n    <div class=\"btn-group\">\n      <div\n        class=\"btn btn-primary\"\n        mwlCalendarPreviousView\n        [view]=\"'day'\"\n        [(viewDate)]=\"viewDate\"\n      >\n        Previous\n      </div>\n      <div\n        class=\"btn btn-outline-secondary\"\n        mwlCalendarToday\n        [(viewDate)]=\"viewDate\"\n      >\n        Today\n      </div>\n      <div\n        class=\"btn btn-primary\"\n        mwlCalendarNextView\n        [view]=\"'day'\"\n        [(viewDate)]=\"viewDate\"\n      >\n        Next\n      </div>\n    </div>\n  </div>\n  <div class=\"col-md-6 text-right\">\n    <h3>{{ viewDate | calendarDate:('dayViewTitle') }}</h3>\n  </div>\n</div>\n<br />\n\n<mwl-day-view-scheduler\n  [viewDate]=\"viewDate\"\n  [events]=\"events\"\n  [users]=\"users\"\n  (eventTimesChanged)=\"eventTimesChanged($event)\"\n  (userChanged)=\"userChanged($event)\"\n>\n</mwl-day-view-scheduler>\n","import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Injectable,\n  Input,\n  LOCALE_ID,\n  OnChanges,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport {\n  CalendarUtils,\n  CalendarWeekViewComponent,\n  DateAdapter,\n  getWeekViewPeriod,\n} from 'angular-calendar';\nimport {\n  WeekView,\n  GetWeekViewArgs,\n  WeekViewTimeEvent,\n  EventColor,\n  CalendarEvent,\n  WeekViewAllDayEventRow,\n  WeekViewAllDayEvent,\n} from 'calendar-utils';\nimport { DragEndEvent, DragMoveEvent } from 'angular-draggable-droppable';\n\nexport interface User {\n  id: number;\n  name: string;\n  color: EventColor;\n}\n\ninterface DayViewScheduler extends WeekView {\n  users: User[];\n}\n\ninterface GetWeekViewArgsWithUsers extends GetWeekViewArgs {\n  users: User[];\n}\n\n@Injectable()\nexport class DayViewSchedulerCalendarUtils extends CalendarUtils {\n  getWeekView(args: GetWeekViewArgsWithUsers): DayViewScheduler {\n    const { period } = super.getWeekView(args);\n    const view: DayViewScheduler = {\n      period,\n      allDayEventRows: [],\n      hourColumns: [],\n      users: [...args.users],\n    };\n\n    view.users.forEach((user, columnIndex) => {\n      const events = args.events.filter(\n        (event) => event.meta.user.id === user.id\n      );\n      const columnView = super.getWeekView({\n        ...args,\n        events,\n      });\n      view.hourColumns.push(columnView.hourColumns[0]);\n      columnView.allDayEventRows.forEach(({ row }, rowIndex) => {\n        view.allDayEventRows[rowIndex] = view.allDayEventRows[rowIndex] || {\n          row: [],\n        };\n        view.allDayEventRows[rowIndex].row.push({\n          ...row[0],\n          offset: columnIndex,\n          span: 1,\n        });\n      });\n    });\n\n    return view;\n  }\n}\n\n@Component({\n  selector: 'mwl-day-view-scheduler',\n  templateUrl: 'day-view-scheduler.component.html',\n  providers: [DayViewSchedulerCalendarUtils],\n})\nexport class DayViewSchedulerComponent\n  extends CalendarWeekViewComponent\n  implements OnChanges\n{\n  @Input() users: User[] = [];\n\n  @Output() userChanged = new EventEmitter();\n\n  view: DayViewScheduler;\n\n  daysInWeek = 1;\n\n  constructor(\n    protected cdr: ChangeDetectorRef,\n    protected utils: DayViewSchedulerCalendarUtils,\n    @Inject(LOCALE_ID) locale: string,\n    protected dateAdapter: DateAdapter,\n    protected element: ElementRef<HTMLElement>\n  ) {\n    super(cdr, utils, locale, dateAdapter, element);\n  }\n\n  trackByUserId = (index: number, row: User) => row.id;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    super.ngOnChanges(changes);\n\n    if (changes.users) {\n      this.refreshBody();\n      this.emitBeforeViewRender();\n    }\n  }\n\n  getDayColumnWidth(eventRowContainer: HTMLElement): number {\n    return Math.floor(eventRowContainer.offsetWidth / this.users.length);\n  }\n\n  dragMove(dayEvent: WeekViewTimeEvent, dragEvent: DragMoveEvent) {\n    if (this.snapDraggedEvents) {\n      const newUser = this.getDraggedUserColumn(dayEvent, dragEvent.x);\n      const newEventTimes = this.getDragMovedEventTimes(\n        dayEvent,\n        { ...dragEvent, x: 0 },\n        this.dayColumnWidth,\n        true\n      );\n      const originalEvent = dayEvent.event;\n      const adjustedEvent = {\n        ...originalEvent,\n        ...newEventTimes,\n        meta: { ...originalEvent.meta, user: newUser },\n      };\n      const tempEvents = this.events.map((event) => {\n        if (event === originalEvent) {\n          return adjustedEvent;\n        }\n        return event;\n      });\n      this.restoreOriginalEvents(\n        tempEvents,\n        new Map([[adjustedEvent, originalEvent]])\n      );\n    }\n    this.dragAlreadyMoved = true;\n  }\n\n  dragEnded(\n    weekEvent: WeekViewAllDayEvent | WeekViewTimeEvent,\n    dragEndEvent: DragEndEvent,\n    dayWidth: number,\n    useY = false\n  ) {\n    super.dragEnded(\n      weekEvent,\n      {\n        ...dragEndEvent,\n        x: 0,\n      },\n      dayWidth,\n      useY\n    );\n    const newUser = this.getDraggedUserColumn(weekEvent, dragEndEvent.x);\n    if (newUser && newUser !== weekEvent.event.meta.user) {\n      this.userChanged.emit({ event: weekEvent.event, newUser });\n    }\n  }\n\n  protected getWeekView(events: CalendarEvent[]) {\n    return this.utils.getWeekView({\n      events,\n      users: this.users,\n      viewDate: this.viewDate,\n      weekStartsOn: this.weekStartsOn,\n      excluded: this.excludeDays,\n      precision: this.precision,\n      absolutePositionedEvents: true,\n      hourSegments: this.hourSegments,\n      dayStart: {\n        hour: this.dayStartHour,\n        minute: this.dayStartMinute,\n      },\n      dayEnd: {\n        hour: this.dayEndHour,\n        minute: this.dayEndMinute,\n      },\n      segmentHeight: this.hourSegmentHeight,\n      weekendDays: this.weekendDays,\n      ...getWeekViewPeriod(\n        this.dateAdapter,\n        this.viewDate,\n        this.weekStartsOn,\n        this.excludeDays,\n        this.daysInWeek\n      ),\n    });\n  }\n\n  private getDraggedUserColumn(\n    dayEvent: WeekViewTimeEvent | WeekViewAllDayEvent,\n    xPixels: number\n  ) {\n    const columnsMoved = Math.round(xPixels / this.dayColumnWidth);\n    const currentColumnIndex = this.view.users.findIndex(\n      (user) => user === dayEvent.event.meta.user\n    );\n    const newIndex = currentColumnIndex + columnsMoved;\n    return this.view.users[newIndex];\n  }\n}\n","<div class=\"cal-week-view\" role=\"grid\">\n  <div class=\"cal-day-headers\" role=\"row\">\n    <div\n      class=\"cal-header\"\n      *ngFor=\"let user of users; trackBy: trackByUserId\"\n      tabindex=\"0\"\n      role=\"columnheader\"\n    >\n      <b>{{ user.name }}</b>\n    </div>\n  </div>\n  <div\n    class=\"cal-all-day-events\"\n    #allDayEventsContainer\n    *ngIf=\"view.allDayEventRows.length > 0\"\n    mwlDroppable\n    (dragEnter)=\"dragEnter('allDay')\"\n    (dragLeave)=\"dragLeave('allDay')\"\n  >\n    <div class=\"cal-day-columns\">\n      <div\n        class=\"cal-time-label-column\"\n        [ngTemplateOutlet]=\"allDayEventsLabelTemplate\"\n      ></div>\n      <div\n        class=\"cal-day-column\"\n        *ngFor=\"let day of days; trackBy: trackByWeekDayHeaderDate\"\n        mwlDroppable\n        dragOverClass=\"cal-drag-over\"\n        (drop)=\"eventDropped($event, day.date, true)\"\n        (dragEnter)=\"dateDragEnter(day.date)\"\n      ></div>\n    </div>\n    <div\n      *ngFor=\"let eventRow of view.allDayEventRows; trackBy: trackById\"\n      #eventRowContainer\n      class=\"cal-events-row\"\n    >\n      <div\n        *ngFor=\"\n          let allDayEvent of eventRow.row;\n          trackBy: trackByWeekAllDayEvent\n        \"\n        #event\n        class=\"cal-event-container\"\n        [class.cal-draggable]=\"\n          allDayEvent.event.draggable && allDayEventResizes.size === 0\n        \"\n        [class.cal-starts-within-week]=\"!allDayEvent.startsBeforeWeek\"\n        [class.cal-ends-within-week]=\"!allDayEvent.endsAfterWeek\"\n        [ngClass]=\"allDayEvent.event?.cssClass\"\n        [style.width.%]=\"(100 / users.length) * allDayEvent.span\"\n        [style.marginLeft.%]=\"(100 / users.length) * allDayEvent.offset\"\n        mwlDraggable\n        dragActiveClass=\"cal-drag-active\"\n        [dropData]=\"{ event: allDayEvent.event, calendarId: calendarId }\"\n        [dragAxis]=\"{\n          x: allDayEvent.event.draggable && allDayEventResizes.size === 0,\n          y:\n            !snapDraggedEvents &&\n            allDayEvent.event.draggable &&\n            allDayEventResizes.size === 0\n        }\"\n        [dragSnapGrid]=\"snapDraggedEvents ? { x: dayColumnWidth } : {}\"\n        [validateDrag]=\"validateDrag\"\n        (dragStart)=\"dragStarted(eventRowContainer, event, allDayEvent, false)\"\n        (dragging)=\"allDayEventDragMove()\"\n        (dragEnd)=\"dragEnded(allDayEvent, $event, dayColumnWidth)\"\n      >\n        <mwl-calendar-week-view-event\n          [locale]=\"locale\"\n          [weekEvent]=\"allDayEvent\"\n          [tooltipPlacement]=\"tooltipPlacement\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipAppendToBody]=\"tooltipAppendToBody\"\n          [tooltipDelay]=\"tooltipDelay\"\n          [customTemplate]=\"eventTemplate\"\n          [eventTitleTemplate]=\"eventTitleTemplate\"\n          [eventActionsTemplate]=\"eventActionsTemplate\"\n          [daysInWeek]=\"daysInWeek\"\n          (eventClicked)=\"\n            eventClicked.emit({\n              event: allDayEvent.event,\n              sourceEvent: $event.sourceEvent\n            })\n          \"\n        >\n        </mwl-calendar-week-view-event>\n      </div>\n    </div>\n  </div>\n  <div\n    class=\"cal-time-events\"\n    mwlDroppable\n    (dragEnter)=\"dragEnter('time')\"\n    (dragLeave)=\"dragLeave('time')\"\n  >\n    <div class=\"cal-time-label-column\" *ngIf=\"view.hourColumns.length > 0\">\n      <div\n        *ngFor=\"\n          let hour of view.hourColumns[0].hours;\n          trackBy: trackByHour;\n          let odd = odd\n        \"\n        class=\"cal-hour\"\n        [class.cal-hour-odd]=\"odd\"\n      >\n        <mwl-calendar-week-view-hour-segment\n          *ngFor=\"let segment of hour.segments; trackBy: trackByHourSegment\"\n          [style.height.px]=\"hourSegmentHeight\"\n          [segment]=\"segment\"\n          [segmentHeight]=\"hourSegmentHeight\"\n          [locale]=\"locale\"\n          [customTemplate]=\"hourSegmentTemplate\"\n          [isTimeLabel]=\"true\"\n        >\n        </mwl-calendar-week-view-hour-segment>\n      </div>\n    </div>\n    <div\n      class=\"cal-day-columns\"\n      [class.cal-resize-active]=\"timeEventResizes.size > 0\"\n      #dayColumns\n    >\n      <div\n        class=\"cal-day-column\"\n        *ngFor=\"let column of view.hourColumns; trackBy: trackByHourColumn\"\n      >\n        <mwl-calendar-week-view-current-time-marker\n          [columnDate]=\"column.date\"\n          [dayStartHour]=\"dayStartHour\"\n          [dayStartMinute]=\"dayStartMinute\"\n          [dayEndHour]=\"dayEndHour\"\n          [dayEndMinute]=\"dayEndMinute\"\n          [hourSegments]=\"hourSegments\"\n          [hourSegmentHeight]=\"hourSegmentHeight\"\n          [customTemplate]=\"currentTimeMarkerTemplate\"\n        ></mwl-calendar-week-view-current-time-marker>\n        <div\n          *ngFor=\"let timeEvent of column.events; trackBy: trackByWeekTimeEvent\"\n          #event\n          class=\"cal-event-container\"\n          [class.cal-draggable]=\"\n            timeEvent.event.draggable && timeEventResizes.size === 0\n          \"\n          [class.cal-starts-within-day]=\"!timeEvent.startsBeforeDay\"\n          [class.cal-ends-within-day]=\"!timeEvent.endsAfterDay\"\n          [ngClass]=\"timeEvent.event.cssClass\"\n          [hidden]=\"timeEvent.height === 0 && timeEvent.width === 0\"\n          [style.top.px]=\"timeEvent.top\"\n          [style.height.px]=\"timeEvent.height\"\n          [style.left.%]=\"timeEvent.left\"\n          [style.width.%]=\"timeEvent.width\"\n          mwlResizable\n          [resizeSnapGrid]=\"{\n            left: dayColumnWidth,\n            right: dayColumnWidth,\n            top: eventSnapSize || hourSegmentHeight,\n            bottom: eventSnapSize || hourSegmentHeight\n          }\"\n          [validateResize]=\"validateResize\"\n          [allowNegativeResizes]=\"true\"\n          (resizeStart)=\"timeEventResizeStarted(dayColumns, timeEvent, $event)\"\n          (resizing)=\"timeEventResizing(timeEvent, $event)\"\n          (resizeEnd)=\"timeEventResizeEnded(timeEvent)\"\n          mwlDraggable\n          dragActiveClass=\"cal-drag-active\"\n          [dropData]=\"{ event: timeEvent.event, calendarId: calendarId }\"\n          [dragAxis]=\"{\n            x: timeEvent.event.draggable && timeEventResizes.size === 0,\n            y: timeEvent.event.draggable && timeEventResizes.size === 0\n          }\"\n          [dragSnapGrid]=\"\n            snapDraggedEvents\n              ? { x: dayColumnWidth, y: eventSnapSize || hourSegmentHeight }\n              : {}\n          \"\n          [ghostDragEnabled]=\"!snapDraggedEvents\"\n          [validateDrag]=\"validateDrag\"\n          (dragStart)=\"dragStarted(dayColumns, event, timeEvent, true)\"\n          (dragging)=\"dragMove(timeEvent, $event)\"\n          (dragEnd)=\"dragEnded(timeEvent, $event, dayColumnWidth, true)\"\n        >\n          <div\n            class=\"cal-resize-handle cal-resize-handle-before-start\"\n            *ngIf=\"\n              timeEvent.event?.resizable?.beforeStart &&\n              !timeEvent.startsBeforeDay\n            \"\n            mwlResizeHandle\n            [resizeEdges]=\"{\n              left: true,\n              top: true\n            }\"\n          ></div>\n          <mwl-calendar-week-view-event\n            [locale]=\"locale\"\n            [weekEvent]=\"timeEvent\"\n            [tooltipPlacement]=\"tooltipPlacement\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [tooltipAppendToBody]=\"tooltipAppendToBody\"\n            [tooltipDisabled]=\"dragActive || timeEventResizes.size > 0\"\n            [tooltipDelay]=\"tooltipDelay\"\n            [customTemplate]=\"eventTemplate\"\n            [eventTitleTemplate]=\"eventTitleTemplate\"\n            [eventActionsTemplate]=\"eventActionsTemplate\"\n            [column]=\"column\"\n            (eventClicked)=\"\n              eventClicked.emit({\n                event: timeEvent.event,\n                sourceEvent: $event.sourceEvent\n              })\n            \"\n          >\n          </mwl-calendar-week-view-event>\n          <div\n            class=\"cal-resize-handle cal-resize-handle-after-end\"\n            *ngIf=\"\n              timeEvent.event?.resizable?.afterEnd && !timeEvent.endsAfterDay\n            \"\n            mwlResizeHandle\n            [resizeEdges]=\"{\n              right: true,\n              bottom: true\n            }\"\n          ></div>\n        </div>\n\n        <div\n          *ngFor=\"let hour of column.hours; trackBy: trackByHour; let odd = odd\"\n          class=\"cal-hour\"\n          [class.cal-hour-odd]=\"odd\"\n        >\n          <mwl-calendar-week-view-hour-segment\n            *ngFor=\"let segment of hour.segments; trackBy: trackByHourSegment\"\n            [style.height.px]=\"hourSegmentHeight\"\n            [segment]=\"segment\"\n            [segmentHeight]=\"hourSegmentHeight\"\n            [locale]=\"locale\"\n            [customTemplate]=\"hourSegmentTemplate\"\n            (mwlClick)=\"\n              hourSegmentClicked.emit({\n                date: segment.date,\n                sourceEvent: $event\n              })\n            \"\n            [clickListenerDisabled]=\"hourSegmentClicked.observers.length === 0\"\n            mwlDroppable\n            [dragOverClass]=\"\n              !dragActive || !snapDraggedEvents ? 'cal-drag-over' : null\n            \"\n            dragActiveClass=\"cal-drag-active\"\n            (drop)=\"eventDropped($event, segment.date, false)\"\n          >\n          </mwl-calendar-week-view-hour-segment>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\nimport { DemoUtilsModule } from '../demo-utils/module';\nimport { DemoComponent } from './component';\nimport { DayViewSchedulerComponent } from './day-view-scheduler.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CalendarModule.forRoot({\n      provide: DateAdapter,\n      useFactory: adapterFactory,\n    }),\n    DemoUtilsModule,\n    RouterModule.forChild([{ path: '', component: DemoComponent }]),\n  ],\n  declarations: [DemoComponent, DayViewSchedulerComponent],\n  exports: [DemoComponent],\n})\nexport class DemoModule {}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CalendarView } from 'angular-calendar';\n\n@Component({\n  selector: 'mwl-demo-utils-calendar-header',\n  template: `\n    <div class=\"row text-center\">\n      <div class=\"col-md-4\">\n        <div class=\"btn-group\">\n          <div\n            class=\"btn btn-primary\"\n            mwlCalendarPreviousView\n            [view]=\"view\"\n            [(viewDate)]=\"viewDate\"\n            (viewDateChange)=\"viewDateChange.next(viewDate)\"\n          >\n            Previous\n          </div>\n          <div\n            class=\"btn btn-outline-secondary\"\n            mwlCalendarToday\n            [(viewDate)]=\"viewDate\"\n            (viewDateChange)=\"viewDateChange.next(viewDate)\"\n          >\n            Today\n          </div>\n          <div\n            class=\"btn btn-primary\"\n            mwlCalendarNextView\n            [view]=\"view\"\n            [(viewDate)]=\"viewDate\"\n            (viewDateChange)=\"viewDateChange.next(viewDate)\"\n          >\n            Next\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-4\">\n        <h3>{{ viewDate | calendarDate: view + 'ViewTitle':locale }}</h3>\n      </div>\n      <div class=\"col-md-4\">\n        <div class=\"btn-group\">\n          <div\n            class=\"btn btn-primary\"\n            (click)=\"viewChange.emit(CalendarView.Month)\"\n            [class.active]=\"view === CalendarView.Month\"\n          >\n            Month\n          </div>\n          <div\n            class=\"btn btn-primary\"\n            (click)=\"viewChange.emit(CalendarView.Week)\"\n            [class.active]=\"view === CalendarView.Week\"\n          >\n            Week\n          </div>\n          <div\n            class=\"btn btn-primary\"\n            (click)=\"viewChange.emit(CalendarView.Day)\"\n            [class.active]=\"view === CalendarView.Day\"\n          >\n            Day\n          </div>\n        </div>\n      </div>\n    </div>\n    <br />\n  `,\n})\nexport class CalendarHeaderComponent {\n  @Input() view: CalendarView;\n\n  @Input() viewDate: Date;\n\n  @Input() locale: string = 'en';\n\n  @Output() viewChange = new EventEmitter<CalendarView>();\n\n  @Output() viewDateChange = new EventEmitter<Date>();\n\n  CalendarView = CalendarView;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { CalendarModule } from 'angular-calendar';\nimport { CalendarHeaderComponent } from './calendar-header.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, CalendarModule],\n  declarations: [CalendarHeaderComponent],\n  exports: [CalendarHeaderComponent],\n})\nexport class DemoUtilsModule {}\n"],"names":[],"sourceRoot":"webpack:///"}