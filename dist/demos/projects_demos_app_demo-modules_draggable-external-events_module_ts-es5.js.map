{"version":3,"mappings":"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","names":["CalendarHeaderComponent","_angular_core__WEBPACK_IMPORTED_MODULE_0__","angular_calendar__WEBPACK_IMPORTED_MODULE_1__","selectors","inputs","view","viewDate","locale","outputs","viewChange","viewDateChange","decls","vars","consts","template","ctx","DemoUtilsModule","_angular_common__WEBPACK_IMPORTED_MODULE_1__","_angular_forms__WEBPACK_IMPORTED_MODULE_2__","angular_calendar__WEBPACK_IMPORTED_MODULE_3__","declarations","_calendar_header_component__WEBPACK_IMPORTED_MODULE_4__","imports","exports","ctx_r2","ctx_r3","ctx_r4","DemoComponent","Date","title","color","_demo_utils_colors__WEBPACK_IMPORTED_MODULE_2__","start","draggable","rxjs__WEBPACK_IMPORTED_MODULE_3__","event","newStart","newEnd","allDay","externalIndex","externalEvents","indexOf","splice","events","push","end","activeDayIsOpen","filter","iEvent","DemoModule","angular_calendar__WEBPACK_IMPORTED_MODULE_2__","provide","useFactory","angular_calendar_date_adapters_date_fns__WEBPACK_IMPORTED_MODULE_4__","angular_draggable_droppable__WEBPACK_IMPORTED_MODULE_5__","_demo_utils_module__WEBPACK_IMPORTED_MODULE_6__","_angular_router__WEBPACK_IMPORTED_MODULE_7__","path","component","_component__WEBPACK_IMPORTED_MODULE_8__"],"sources":["webpack:///projects/demos/app/demo-modules/demo-utils/calendar-header.component.ts","webpack:///projects/demos/app/demo-modules/demo-utils/module.ts","webpack:///projects/demos/app/demo-modules/draggable-external-events/template.html","webpack:///projects/demos/app/demo-modules/draggable-external-events/component.ts","webpack:///projects/demos/app/demo-modules/draggable-external-events/module.ts"],"sourcesContent":["import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CalendarView } from 'angular-calendar';\n\n@Component({\n  selector: 'mwl-demo-utils-calendar-header',\n  template: `\n    <div class=\"row text-center\">\n      <div class=\"col-md-4\">\n        <div class=\"btn-group\">\n          <div\n            class=\"btn btn-primary\"\n            mwlCalendarPreviousView\n            [view]=\"view\"\n            [(viewDate)]=\"viewDate\"\n            (viewDateChange)=\"viewDateChange.next(viewDate)\"\n          >\n            Previous\n          </div>\n          <div\n            class=\"btn btn-outline-secondary\"\n            mwlCalendarToday\n            [(viewDate)]=\"viewDate\"\n            (viewDateChange)=\"viewDateChange.next(viewDate)\"\n          >\n            Today\n          </div>\n          <div\n            class=\"btn btn-primary\"\n            mwlCalendarNextView\n            [view]=\"view\"\n            [(viewDate)]=\"viewDate\"\n            (viewDateChange)=\"viewDateChange.next(viewDate)\"\n          >\n            Next\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-4\">\n        <h3>{{ viewDate | calendarDate: view + 'ViewTitle':locale }}</h3>\n      </div>\n      <div class=\"col-md-4\">\n        <div class=\"btn-group\">\n          <div\n            class=\"btn btn-primary\"\n            (click)=\"viewChange.emit(CalendarView.Month)\"\n            [class.active]=\"view === CalendarView.Month\"\n          >\n            Month\n          </div>\n          <div\n            class=\"btn btn-primary\"\n            (click)=\"viewChange.emit(CalendarView.Week)\"\n            [class.active]=\"view === CalendarView.Week\"\n          >\n            Week\n          </div>\n          <div\n            class=\"btn btn-primary\"\n            (click)=\"viewChange.emit(CalendarView.Day)\"\n            [class.active]=\"view === CalendarView.Day\"\n          >\n            Day\n          </div>\n        </div>\n      </div>\n    </div>\n    <br />\n  `,\n})\nexport class CalendarHeaderComponent {\n  @Input() view: CalendarView;\n\n  @Input() viewDate: Date;\n\n  @Input() locale: string = 'en';\n\n  @Output() viewChange = new EventEmitter<CalendarView>();\n\n  @Output() viewDateChange = new EventEmitter<Date>();\n\n  CalendarView = CalendarView;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { CalendarModule } from 'angular-calendar';\nimport { CalendarHeaderComponent } from './calendar-header.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, CalendarModule],\n  declarations: [CalendarHeaderComponent],\n  exports: [CalendarHeaderComponent],\n})\nexport class DemoUtilsModule {}\n","<div class=\"row\">\n  <div class=\"col-md-3\">\n    <div\n      class=\"card\"\n      mwlDroppable\n      (drop)=\"externalDrop($event.dropData.event)\"\n      dragOverClass=\"drag-over\"\n    >\n      <div class=\"card-body\">\n        <p *ngIf=\"externalEvents.length === 0\"><em>No events added</em></p>\n        <ul>\n          <li\n            *ngFor=\"let event of externalEvents\"\n            mwlDraggable\n            [dropData]=\"{event: event}\"\n            [touchStartLongPress]=\"{ delay: 300, delta: 30 }\"\n            dragActiveClass=\"drag-active\"\n          >\n            <a href=\"javascript:;\" [style.color]=\"event.color.primary\">\n              {{ event.title }}\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"col-md-9\">\n    <mwl-demo-utils-calendar-header [(view)]=\"view\" [(viewDate)]=\"viewDate\">\n    </mwl-demo-utils-calendar-header>\n\n    <div [ngSwitch]=\"view\">\n      <mwl-calendar-month-view\n        *ngSwitchCase=\"CalendarView.Month\"\n        [viewDate]=\"viewDate\"\n        [events]=\"events\"\n        [activeDayIsOpen]=\"activeDayIsOpen\"\n        [refresh]=\"refresh\"\n        (eventTimesChanged)=\"eventDropped($event)\"\n      >\n      </mwl-calendar-month-view>\n      <mwl-calendar-week-view\n        *ngSwitchCase=\"CalendarView.Week\"\n        [viewDate]=\"viewDate\"\n        [events]=\"events\"\n        [refresh]=\"refresh\"\n        [snapDraggedEvents]=\"false\"\n        (eventTimesChanged)=\"eventDropped($event)\"\n      >\n      </mwl-calendar-week-view>\n      <mwl-calendar-day-view\n        *ngSwitchCase=\"CalendarView.Day\"\n        [viewDate]=\"viewDate\"\n        [events]=\"events\"\n        [refresh]=\"refresh\"\n        [snapDraggedEvents]=\"false\"\n        (eventTimesChanged)=\"eventDropped($event)\"\n      >\n      </mwl-calendar-day-view>\n    </div>\n  </div>\n</div>\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport {\n  CalendarEvent,\n  CalendarEventTimesChangedEvent,\n  CalendarView,\n} from 'angular-calendar';\nimport { Subject } from 'rxjs';\nimport { colors } from '../demo-utils/colors';\n\n@Component({\n  selector: 'mwl-demo-component',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: 'template.html',\n  styles: [\n    `\n      .drag-active {\n        position: relative;\n        z-index: 1;\n        pointer-events: none;\n      }\n      .drag-over {\n        background-color: #eee;\n      }\n    `,\n  ],\n})\nexport class DemoComponent {\n  CalendarView = CalendarView;\n\n  view = CalendarView.Month;\n\n  viewDate = new Date();\n\n  externalEvents: CalendarEvent[] = [\n    {\n      title: 'Event 1',\n      color: colors.yellow,\n      start: new Date(),\n      draggable: true,\n    },\n    {\n      title: 'Event 2',\n      color: colors.blue,\n      start: new Date(),\n      draggable: true,\n    },\n  ];\n\n  events: CalendarEvent[] = [];\n\n  activeDayIsOpen = false;\n\n  refresh = new Subject<void>();\n\n  eventDropped({\n    event,\n    newStart,\n    newEnd,\n    allDay,\n  }: CalendarEventTimesChangedEvent): void {\n    const externalIndex = this.externalEvents.indexOf(event);\n    if (typeof allDay !== 'undefined') {\n      event.allDay = allDay;\n    }\n    if (externalIndex > -1) {\n      this.externalEvents.splice(externalIndex, 1);\n      this.events.push(event);\n    }\n    event.start = newStart;\n    if (newEnd) {\n      event.end = newEnd;\n    }\n    if (this.view === 'month') {\n      this.viewDate = newStart;\n      this.activeDayIsOpen = true;\n    }\n    this.events = [...this.events];\n  }\n\n  externalDrop(event: CalendarEvent) {\n    if (this.externalEvents.indexOf(event) === -1) {\n      this.events = this.events.filter((iEvent) => iEvent !== event);\n      this.externalEvents.push(event);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\nimport { DragAndDropModule } from 'angular-draggable-droppable';\nimport { DemoUtilsModule } from '../demo-utils/module';\nimport { DemoComponent } from './component';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CalendarModule.forRoot({\n      provide: DateAdapter,\n      useFactory: adapterFactory,\n    }),\n    DragAndDropModule,\n    DemoUtilsModule,\n    RouterModule.forChild([{ path: '', component: DemoComponent }]),\n  ],\n  declarations: [DemoComponent],\n  exports: [DemoComponent],\n})\nexport class DemoModule {}\n"]}